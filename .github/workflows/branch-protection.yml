name: Branch Protection Rules

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  enforce-branch-protection:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
      contents: read
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check branch name format
        if: github.event_name == 'pull_request'
        shell: bash
        run: |
          BRANCH_NAME=${{ github.head_ref }}
          if [[ ! "$BRANCH_NAME" =~ ^(feature|fix|refactor|docs|chore)/.+ ]]; then
            echo "Branch name must start with feature/, fix/, refactor/, docs/, or chore/"
            exit 1
          fi

      - name: Verify commit messages
        if: github.event_name == 'pull_request'
        shell: bash
        run: |
          git fetch origin ${{ github.base_ref }}
          commits=$(git log --format=%s origin/${{ github.base_ref }}..HEAD)
          echo "$commits" | while IFS= read -r commit; do
            if [[ ! "$commit" =~ ^(feat|fix|docs|style|refactor|test|chore)(\(.+\))?!?:.+ ]]; then
              echo "Invalid commit message format: $commit"
              echo "Commit messages must follow conventional commits format"
              exit 1
            fi
          done

      - name: Check file size
        if: github.event_name == 'pull_request'
        shell: bash
        run: |
          MAX_SIZE=5242880  # 5MB
          git fetch origin ${{ github.base_ref }}
          git diff --name-only origin/${{ github.base_ref }}..HEAD | while read -r file; do
            if [ -f "$file" ]; then
              size=$(stat -f%z "$file" || stat -c%s "$file")
              if [ "$size" -gt $MAX_SIZE ]; then
                echo "File $file is larger than 5MB"
                exit 1
              fi
            fi
          done

      - name: Check owner status
        if: github.event_name == 'pull_request'
        id: check-owner
        shell: bash
        run: |
          if [ "${{ github.event.pull_request.user.login }}" = "${{ github.repository_owner }}" ]; then
            echo "is_owner=true" >> $GITHUB_OUTPUT
          else
            echo "is_owner=false" >> $GITHUB_OUTPUT
          fi

      - name: Check reviews
        if: github.event_name == 'pull_request' && steps.check-owner.outputs.is_owner != 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            
            const approvedReviews = reviews.filter(review => review.state === 'APPROVED');
            if (approvedReviews.length < 1) {
              core.setFailed('At least one approved review is required');
            }
