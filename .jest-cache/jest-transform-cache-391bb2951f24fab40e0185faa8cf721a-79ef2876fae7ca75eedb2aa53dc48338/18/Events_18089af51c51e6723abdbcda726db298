91be168f1a416c019df08e684292e881
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const Button_1 = require("../components/ui/Button");
const Card_1 = require("../components/ui/Card");
const Grid_1 = require("../components/layout/Grid");
function Events() {
    const events = [
        {
            id: '1',
            title: 'Winter Tournament',
            date: 'Dec 20, 2024',
            time: '2:00 PM',
            type: 'Tournament',
            spots: 8,
            status: 'open',
        },
        {
            id: '2',
            title: 'Pro Training Session',
            date: 'Dec 22, 2024',
            time: '10:00 AM',
            type: 'Training',
            spots: 4,
            status: 'waitlist',
        },
        {
            id: '3',
            title: 'Christmas Social',
            date: 'Dec 24, 2024',
            time: '1:00 PM',
            type: 'Social',
            spots: 12,
            status: 'open',
        },
    ];
    return ((0, jsx_runtime_1.jsxs)("div", { className: "container mx-auto px-4 py-6 md:py-8", children: [(0, jsx_runtime_1.jsxs)("div", { className: "mb-6 md:mb-8", children: [(0, jsx_runtime_1.jsx)("h1", { className: "text-2xl md:text-3xl font-bold text-white mb-2", children: "Upcoming Events" }), (0, jsx_runtime_1.jsx)("p", { className: "text-gray-400", children: "Register for tournaments and training sessions" })] }), (0, jsx_runtime_1.jsx)("div", { className: "flex flex-wrap gap-2 mb-6 md:mb-8", children: (0, jsx_runtime_1.jsxs)("div", { className: "w-full sm:w-auto flex flex-col sm:flex-row gap-2", children: [(0, jsx_runtime_1.jsx)(Button_1.Button, { variant: "primary", className: "flex-1 sm:flex-none", children: "All Events" }), (0, jsx_runtime_1.jsx)(Button_1.Button, { variant: "secondary", className: "flex-1 sm:flex-none", children: "Tournaments" }), (0, jsx_runtime_1.jsx)(Button_1.Button, { variant: "secondary", className: "flex-1 sm:flex-none", children: "Training" }), (0, jsx_runtime_1.jsx)(Button_1.Button, { variant: "secondary", className: "flex-1 sm:flex-none", children: "Social" })] }) }), (0, jsx_runtime_1.jsx)(Grid_1.Grid, { cols: 1, mdCols: 2, lgCols: 3, gap: 6, children: events.map(event => ((0, jsx_runtime_1.jsxs)(Card_1.Card, { className: "flex flex-col p-4 md:p-6", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex justify-between items-start mb-4", children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("h3", { className: "text-lg md:text-xl font-semibold text-white mb-1", children: event.title }), (0, jsx_runtime_1.jsxs)("p", { className: "text-sm text-gray-400", children: [event.date, " at ", event.time] })] }), (0, jsx_runtime_1.jsx)("span", { className: `px-3 py-1 rounded-full text-sm ${event.type === 'Tournament'
                                        ? 'bg-blue-100 text-blue-800'
                                        : event.type === 'Social'
                                            ? 'bg-red-100 text-red-800'
                                            : 'bg-purple-100 text-purple-800'}`, children: event.type })] }), (0, jsx_runtime_1.jsx)("div", { className: "flex items-center mb-4", children: (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center space-x-2", children: [(0, jsx_runtime_1.jsx)("svg", { className: "w-5 h-5 text-gray-400", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" }) }), (0, jsx_runtime_1.jsxs)("span", { className: "text-sm text-gray-400", children: [event.spots, " spots left"] })] }) }), (0, jsx_runtime_1.jsx)("div", { className: "mt-auto", children: event.status === 'open' ? ((0, jsx_runtime_1.jsx)(Button_1.Button, { variant: "primary", className: "w-full", children: "Register Now" })) : ((0, jsx_runtime_1.jsx)(Button_1.Button, { variant: "secondary", className: "w-full", children: "Waitlist" })) })] }, event.id))) }), (0, jsx_runtime_1.jsx)("div", { className: "mt-8 text-center", children: (0, jsx_runtime_1.jsxs)(Button_1.Button, { variant: "secondary", className: "inline-flex items-center", children: [(0, jsx_runtime_1.jsx)("svg", { className: "w-5 h-5 mr-2", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" }) }), "View Calendar"] }) })] }));
}
exports.default = Events;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2VyaWNoYW1pbHQwbi9yZXBvcy9sb2RnZTJhL2wyYS1tb2JpbGUtYXBwL3NyYy9wYWdlcy9FdmVudHMudHN4IiwibWFwcGluZ3MiOiI7OztBQUNBLG9EQUFnRDtBQUNoRCxnREFBNEM7QUFDNUMsb0RBQWdEO0FBWWhELFNBQXdCLE1BQU07SUFDNUIsTUFBTSxNQUFNLEdBQVk7UUFDdEI7WUFDRSxFQUFFLEVBQUUsR0FBRztZQUNQLEtBQUssRUFBRSxtQkFBbUI7WUFDMUIsSUFBSSxFQUFFLGNBQWM7WUFDcEIsSUFBSSxFQUFFLFNBQVM7WUFDZixJQUFJLEVBQUUsWUFBWTtZQUNsQixLQUFLLEVBQUUsQ0FBQztZQUNSLE1BQU0sRUFBRSxNQUFNO1NBQ2Y7UUFDRDtZQUNFLEVBQUUsRUFBRSxHQUFHO1lBQ1AsS0FBSyxFQUFFLHNCQUFzQjtZQUM3QixJQUFJLEVBQUUsY0FBYztZQUNwQixJQUFJLEVBQUUsVUFBVTtZQUNoQixJQUFJLEVBQUUsVUFBVTtZQUNoQixLQUFLLEVBQUUsQ0FBQztZQUNSLE1BQU0sRUFBRSxVQUFVO1NBQ25CO1FBQ0Q7WUFDRSxFQUFFLEVBQUUsR0FBRztZQUNQLEtBQUssRUFBRSxrQkFBa0I7WUFDekIsSUFBSSxFQUFFLGNBQWM7WUFDcEIsSUFBSSxFQUFFLFNBQVM7WUFDZixJQUFJLEVBQUUsUUFBUTtZQUNkLEtBQUssRUFBRSxFQUFFO1lBQ1QsTUFBTSxFQUFFLE1BQU07U0FDZjtLQUNGLENBQUE7SUFFRCxPQUFPLENBQ0wsaUNBQUssU0FBUyxFQUFDLHFDQUFxQyxhQUNsRCxpQ0FBSyxTQUFTLEVBQUMsY0FBYyxhQUMzQiwrQkFBSSxTQUFTLEVBQUMsZ0RBQWdELGdDQUFxQixFQUNuRiw4QkFBRyxTQUFTLEVBQUMsZUFBZSwrREFBbUQsSUFDM0UsRUFHTixnQ0FBSyxTQUFTLEVBQUMsbUNBQW1DLFlBQ2hELGlDQUFLLFNBQVMsRUFBQyxrREFBa0QsYUFDL0QsdUJBQUMsZUFBTSxJQUFDLE9BQU8sRUFBQyxTQUFTLEVBQUMsU0FBUyxFQUFDLHFCQUFxQiwyQkFFaEQsRUFDVCx1QkFBQyxlQUFNLElBQUMsT0FBTyxFQUFDLFdBQVcsRUFBQyxTQUFTLEVBQUMscUJBQXFCLDRCQUVsRCxFQUNULHVCQUFDLGVBQU0sSUFBQyxPQUFPLEVBQUMsV0FBVyxFQUFDLFNBQVMsRUFBQyxxQkFBcUIseUJBRWxELEVBQ1QsdUJBQUMsZUFBTSxJQUFDLE9BQU8sRUFBQyxXQUFXLEVBQUMsU0FBUyxFQUFDLHFCQUFxQix1QkFFbEQsSUFDTCxHQUNGLEVBR04sdUJBQUMsV0FBSSxJQUFDLElBQUksRUFBRSxDQUFDLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLFlBQ3hDLE1BQU0sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUNuQix3QkFBQyxXQUFJLElBQWdCLFNBQVMsRUFBQywwQkFBMEIsYUFDdkQsaUNBQUssU0FBUyxFQUFDLHVDQUF1QyxhQUNwRCw0Q0FDRSwrQkFBSSxTQUFTLEVBQUMsa0RBQWtELFlBQUUsS0FBSyxDQUFDLEtBQUssR0FBTSxFQUNuRiwrQkFBRyxTQUFTLEVBQUMsdUJBQXVCLGFBQ2pDLEtBQUssQ0FBQyxJQUFJLFVBQU0sS0FBSyxDQUFDLElBQUksSUFDekIsSUFDQSxFQUNOLGlDQUNFLFNBQVMsRUFBRSxrQ0FDVCxLQUFLLENBQUMsSUFBSSxLQUFLLFlBQVk7d0NBQ3pCLENBQUMsQ0FBQywyQkFBMkI7d0NBQzdCLENBQUMsQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLFFBQVE7NENBQ3ZCLENBQUMsQ0FBQyx5QkFBeUI7NENBQzNCLENBQUMsQ0FBQywrQkFDUixFQUFFLFlBRUQsS0FBSyxDQUFDLElBQUksR0FDTixJQUNILEVBRU4sZ0NBQUssU0FBUyxFQUFDLHdCQUF3QixZQUNyQyxpQ0FBSyxTQUFTLEVBQUMsNkJBQTZCLGFBQzFDLGdDQUNFLFNBQVMsRUFBQyx1QkFBdUIsRUFDakMsSUFBSSxFQUFDLE1BQU0sRUFDWCxNQUFNLEVBQUMsY0FBYyxFQUNyQixPQUFPLEVBQUMsV0FBVyxZQUVuQixpQ0FDRSxhQUFhLEVBQUMsT0FBTyxFQUNyQixjQUFjLEVBQUMsT0FBTyxFQUN0QixXQUFXLEVBQUUsQ0FBQyxFQUNkLENBQUMsRUFBQyx3UUFBd1EsR0FDMVEsR0FDRSxFQUNOLGtDQUFNLFNBQVMsRUFBQyx1QkFBdUIsYUFBRSxLQUFLLENBQUMsS0FBSyxtQkFBbUIsSUFDbkUsR0FDRixFQUVOLGdDQUFLLFNBQVMsRUFBQyxTQUFTLFlBQ3JCLEtBQUssQ0FBQyxNQUFNLEtBQUssTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUN6Qix1QkFBQyxlQUFNLElBQUMsT0FBTyxFQUFDLFNBQVMsRUFBQyxTQUFTLEVBQUMsUUFBUSw2QkFFbkMsQ0FDVixDQUFDLENBQUMsQ0FBQyxDQUNGLHVCQUFDLGVBQU0sSUFBQyxPQUFPLEVBQUMsV0FBVyxFQUFDLFNBQVMsRUFBQyxRQUFRLHlCQUVyQyxDQUNWLEdBQ0csS0FsREcsS0FBSyxDQUFDLEVBQUUsQ0FtRFosQ0FDUixDQUFDLEdBQ0csRUFHUCxnQ0FBSyxTQUFTLEVBQUMsa0JBQWtCLFlBQy9CLHdCQUFDLGVBQU0sSUFBQyxPQUFPLEVBQUMsV0FBVyxFQUFDLFNBQVMsRUFBQywwQkFBMEIsYUFDOUQsZ0NBQUssU0FBUyxFQUFDLGNBQWMsRUFBQyxJQUFJLEVBQUMsTUFBTSxFQUFDLE1BQU0sRUFBQyxjQUFjLEVBQUMsT0FBTyxFQUFDLFdBQVcsWUFDakYsaUNBQ0UsYUFBYSxFQUFDLE9BQU8sRUFDckIsY0FBYyxFQUFDLE9BQU8sRUFDdEIsV0FBVyxFQUFFLENBQUMsRUFDZCxDQUFDLEVBQUMsd0ZBQXdGLEdBQzFGLEdBQ0UscUJBRUMsR0FDTCxJQUNGLENBQ1AsQ0FBQTtBQUNILENBQUM7QUFsSUQseUJBa0lDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9lcmljaGFtaWx0MG4vcmVwb3MvbG9kZ2UyYS9sMmEtbW9iaWxlLWFwcC9zcmMvcGFnZXMvRXZlbnRzLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tICcuLi9jb21wb25lbnRzL3VpL0J1dHRvbidcbmltcG9ydCB7IENhcmQgfSBmcm9tICcuLi9jb21wb25lbnRzL3VpL0NhcmQnXG5pbXBvcnQgeyBHcmlkIH0gZnJvbSAnLi4vY29tcG9uZW50cy9sYXlvdXQvR3JpZCdcblxuaW50ZXJmYWNlIEV2ZW50IHtcbiAgaWQ6IHN0cmluZ1xuICB0aXRsZTogc3RyaW5nXG4gIGRhdGU6IHN0cmluZ1xuICB0aW1lOiBzdHJpbmdcbiAgdHlwZTogc3RyaW5nXG4gIHNwb3RzOiBudW1iZXJcbiAgc3RhdHVzOiBzdHJpbmdcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRXZlbnRzKCkge1xuICBjb25zdCBldmVudHM6IEV2ZW50W10gPSBbXG4gICAge1xuICAgICAgaWQ6ICcxJyxcbiAgICAgIHRpdGxlOiAnV2ludGVyIFRvdXJuYW1lbnQnLFxuICAgICAgZGF0ZTogJ0RlYyAyMCwgMjAyNCcsXG4gICAgICB0aW1lOiAnMjowMCBQTScsXG4gICAgICB0eXBlOiAnVG91cm5hbWVudCcsXG4gICAgICBzcG90czogOCxcbiAgICAgIHN0YXR1czogJ29wZW4nLFxuICAgIH0sXG4gICAge1xuICAgICAgaWQ6ICcyJyxcbiAgICAgIHRpdGxlOiAnUHJvIFRyYWluaW5nIFNlc3Npb24nLFxuICAgICAgZGF0ZTogJ0RlYyAyMiwgMjAyNCcsXG4gICAgICB0aW1lOiAnMTA6MDAgQU0nLFxuICAgICAgdHlwZTogJ1RyYWluaW5nJyxcbiAgICAgIHNwb3RzOiA0LFxuICAgICAgc3RhdHVzOiAnd2FpdGxpc3QnLFxuICAgIH0sXG4gICAge1xuICAgICAgaWQ6ICczJyxcbiAgICAgIHRpdGxlOiAnQ2hyaXN0bWFzIFNvY2lhbCcsXG4gICAgICBkYXRlOiAnRGVjIDI0LCAyMDI0JyxcbiAgICAgIHRpbWU6ICcxOjAwIFBNJyxcbiAgICAgIHR5cGU6ICdTb2NpYWwnLFxuICAgICAgc3BvdHM6IDEyLFxuICAgICAgc3RhdHVzOiAnb3BlbicsXG4gICAgfSxcbiAgXVxuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXIgbXgtYXV0byBweC00IHB5LTYgbWQ6cHktOFwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYi02IG1kOm1iLThcIj5cbiAgICAgICAgPGgxIGNsYXNzTmFtZT1cInRleHQtMnhsIG1kOnRleHQtM3hsIGZvbnQtYm9sZCB0ZXh0LXdoaXRlIG1iLTJcIj5VcGNvbWluZyBFdmVudHM8L2gxPlxuICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LWdyYXktNDAwXCI+UmVnaXN0ZXIgZm9yIHRvdXJuYW1lbnRzIGFuZCB0cmFpbmluZyBzZXNzaW9uczwvcD5cbiAgICAgIDwvZGl2PlxuXG4gICAgICB7LyogRXZlbnQgQ2F0ZWdvcmllcyAqL31cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBmbGV4LXdyYXAgZ2FwLTIgbWItNiBtZDptYi04XCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidy1mdWxsIHNtOnctYXV0byBmbGV4IGZsZXgtY29sIHNtOmZsZXgtcm93IGdhcC0yXCI+XG4gICAgICAgICAgPEJ1dHRvbiB2YXJpYW50PVwicHJpbWFyeVwiIGNsYXNzTmFtZT1cImZsZXgtMSBzbTpmbGV4LW5vbmVcIj5cbiAgICAgICAgICAgIEFsbCBFdmVudHNcbiAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJzZWNvbmRhcnlcIiBjbGFzc05hbWU9XCJmbGV4LTEgc206ZmxleC1ub25lXCI+XG4gICAgICAgICAgICBUb3VybmFtZW50c1xuICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgIDxCdXR0b24gdmFyaWFudD1cInNlY29uZGFyeVwiIGNsYXNzTmFtZT1cImZsZXgtMSBzbTpmbGV4LW5vbmVcIj5cbiAgICAgICAgICAgIFRyYWluaW5nXG4gICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgPEJ1dHRvbiB2YXJpYW50PVwic2Vjb25kYXJ5XCIgY2xhc3NOYW1lPVwiZmxleC0xIHNtOmZsZXgtbm9uZVwiPlxuICAgICAgICAgICAgU29jaWFsXG4gICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG5cbiAgICAgIHsvKiBFdmVudHMgR3JpZCAqL31cbiAgICAgIDxHcmlkIGNvbHM9ezF9IG1kQ29scz17Mn0gbGdDb2xzPXszfSBnYXA9ezZ9PlxuICAgICAgICB7ZXZlbnRzLm1hcChldmVudCA9PiAoXG4gICAgICAgICAgPENhcmQga2V5PXtldmVudC5pZH0gY2xhc3NOYW1lPVwiZmxleCBmbGV4LWNvbCBwLTQgbWQ6cC02XCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXgganVzdGlmeS1iZXR3ZWVuIGl0ZW1zLXN0YXJ0IG1iLTRcIj5cbiAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICA8aDMgY2xhc3NOYW1lPVwidGV4dC1sZyBtZDp0ZXh0LXhsIGZvbnQtc2VtaWJvbGQgdGV4dC13aGl0ZSBtYi0xXCI+e2V2ZW50LnRpdGxlfTwvaDM+XG4gICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1zbSB0ZXh0LWdyYXktNDAwXCI+XG4gICAgICAgICAgICAgICAgICB7ZXZlbnQuZGF0ZX0gYXQge2V2ZW50LnRpbWV9XG4gICAgICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2BweC0zIHB5LTEgcm91bmRlZC1mdWxsIHRleHQtc20gJHtcbiAgICAgICAgICAgICAgICAgIGV2ZW50LnR5cGUgPT09ICdUb3VybmFtZW50J1xuICAgICAgICAgICAgICAgICAgICA/ICdiZy1ibHVlLTEwMCB0ZXh0LWJsdWUtODAwJ1xuICAgICAgICAgICAgICAgICAgICA6IGV2ZW50LnR5cGUgPT09ICdTb2NpYWwnXG4gICAgICAgICAgICAgICAgICAgICAgPyAnYmctcmVkLTEwMCB0ZXh0LXJlZC04MDAnXG4gICAgICAgICAgICAgICAgICAgICAgOiAnYmctcHVycGxlLTEwMCB0ZXh0LXB1cnBsZS04MDAnXG4gICAgICAgICAgICAgICAgfWB9XG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7ZXZlbnQudHlwZX1cbiAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgbWItNFwiPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMlwiPlxuICAgICAgICAgICAgICAgIDxzdmdcbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInctNSBoLTUgdGV4dC1ncmF5LTQwMFwiXG4gICAgICAgICAgICAgICAgICBmaWxsPVwibm9uZVwiXG4gICAgICAgICAgICAgICAgICBzdHJva2U9XCJjdXJyZW50Q29sb3JcIlxuICAgICAgICAgICAgICAgICAgdmlld0JveD1cIjAgMCAyNCAyNFwiXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgPHBhdGhcbiAgICAgICAgICAgICAgICAgICAgc3Ryb2tlTGluZWNhcD1cInJvdW5kXCJcbiAgICAgICAgICAgICAgICAgICAgc3Ryb2tlTGluZWpvaW49XCJyb3VuZFwiXG4gICAgICAgICAgICAgICAgICAgIHN0cm9rZVdpZHRoPXsyfVxuICAgICAgICAgICAgICAgICAgICBkPVwiTTE3IDIwaDV2LTJhMyAzIDAgMDAtNS4zNTYtMS44NTdNMTcgMjBIN20xMCAwdi0yYzAtLjY1Ni0uMTI2LTEuMjgzLS4zNTYtMS44NTdNNyAyMEgydi0yYTMgMyAwIDAxNS4zNTYtMS44NTdNNyAyMHYtMmMwLS42NTYuMTI2LTEuMjgzLjM1Ni0xLjg1N20wIDBhNS4wMDIgNS4wMDIgMCAwMTkuMjg4IDBNMTUgN2EzIDMgMCAxMS02IDAgMyAzIDAgMDE2IDB6bTYgM2EyIDIgMCAxMS00IDAgMiAyIDAgMDE0IDB6TTcgMTBhMiAyIDAgMTEtNCAwIDIgMiAwIDAxNCAwelwiXG4gICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRleHQtc20gdGV4dC1ncmF5LTQwMFwiPntldmVudC5zcG90c30gc3BvdHMgbGVmdDwvc3Bhbj5cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtdC1hdXRvXCI+XG4gICAgICAgICAgICAgIHtldmVudC5zdGF0dXMgPT09ICdvcGVuJyA/IChcbiAgICAgICAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJwcmltYXJ5XCIgY2xhc3NOYW1lPVwidy1mdWxsXCI+XG4gICAgICAgICAgICAgICAgICBSZWdpc3RlciBOb3dcbiAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJzZWNvbmRhcnlcIiBjbGFzc05hbWU9XCJ3LWZ1bGxcIj5cbiAgICAgICAgICAgICAgICAgIFdhaXRsaXN0XG4gICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L0NhcmQ+XG4gICAgICAgICkpfVxuICAgICAgPC9HcmlkPlxuXG4gICAgICB7LyogQ2FsZW5kYXIgVmlldyBCdXR0b24gKi99XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cIm10LTggdGV4dC1jZW50ZXJcIj5cbiAgICAgICAgPEJ1dHRvbiB2YXJpYW50PVwic2Vjb25kYXJ5XCIgY2xhc3NOYW1lPVwiaW5saW5lLWZsZXggaXRlbXMtY2VudGVyXCI+XG4gICAgICAgICAgPHN2ZyBjbGFzc05hbWU9XCJ3LTUgaC01IG1yLTJcIiBmaWxsPVwibm9uZVwiIHN0cm9rZT1cImN1cnJlbnRDb2xvclwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIj5cbiAgICAgICAgICAgIDxwYXRoXG4gICAgICAgICAgICAgIHN0cm9rZUxpbmVjYXA9XCJyb3VuZFwiXG4gICAgICAgICAgICAgIHN0cm9rZUxpbmVqb2luPVwicm91bmRcIlxuICAgICAgICAgICAgICBzdHJva2VXaWR0aD17Mn1cbiAgICAgICAgICAgICAgZD1cIk04IDdWM204IDRWM20tOSA4aDEwTTUgMjFoMTRhMiAyIDAgMDAyLTJWN2EyIDIgMCAwMC0yLTJINWEyIDIgMCAwMC0yIDJ2MTJhMiAyIDAgMDAyIDJ6XCJcbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgVmlldyBDYWxlbmRhclxuICAgICAgICA8L0J1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApXG59XG4iXSwidmVyc2lvbiI6M30=