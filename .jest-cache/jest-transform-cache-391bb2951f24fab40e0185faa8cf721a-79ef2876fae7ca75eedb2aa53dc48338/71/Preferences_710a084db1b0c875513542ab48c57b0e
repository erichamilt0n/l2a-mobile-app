e16520b9ddedf2babe836477d26a9b8c
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const SettingsLayout_1 = __importDefault(require("../components/SettingsLayout"));
function Preferences() {
    const [preferences, setPreferences] = (0, react_1.useState)([
        {
            id: 'darkMode',
            title: 'Dark Mode',
            description: 'Use dark theme across the application',
            enabled: true,
        },
        {
            id: 'autoBook',
            title: 'Auto Booking',
            description: 'Enable automatic booking for regular sessions',
            enabled: false,
        },
        {
            id: 'reminders',
            title: 'Session Reminders',
            description: 'Get reminders before your scheduled sessions',
            enabled: true,
        },
    ]);
    const togglePreference = (id) => {
        setPreferences(preferences.map(preference => preference.id === id ? { ...preference, enabled: !preference.enabled } : preference));
    };
    return ((0, jsx_runtime_1.jsx)(SettingsLayout_1.default, { title: "Preferences", description: "Customize your application settings", children: (0, jsx_runtime_1.jsx)("div", { className: "bg-white rounded-xl p-8", children: (0, jsx_runtime_1.jsx)("div", { className: "space-y-6", children: preferences.map(preference => ((0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-between py-4", children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("h3", { className: "text-gray-900 font-medium", children: preference.title }), (0, jsx_runtime_1.jsx)("p", { className: "text-gray-500 text-sm", children: preference.description })] }), (0, jsx_runtime_1.jsx)("button", { onClick: () => {
                                togglePreference(preference.id);
                            }, className: `relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${preference.enabled ? 'bg-[#333e48]' : 'bg-gray-200'}`, children: (0, jsx_runtime_1.jsx)("span", { className: `inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${preference.enabled ? 'translate-x-6' : 'translate-x-1'}` }) })] }, preference.id))) }) }) }));
}
exports.default = Preferences;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2VyaWNoYW1pbHQwbi9yZXBvcy9sb2RnZTJhL2wyYS1tb2JpbGUtYXBwL3NyYy9wYWdlcy9QcmVmZXJlbmNlcy50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsaUNBQXVDO0FBQ3ZDLGtGQUF5RDtBQVN6RCxTQUF3QixXQUFXO0lBQ2pDLE1BQU0sQ0FBQyxXQUFXLEVBQUUsY0FBYyxDQUFDLEdBQUcsSUFBQSxnQkFBUSxFQUFzQjtRQUNsRTtZQUNFLEVBQUUsRUFBRSxVQUFVO1lBQ2QsS0FBSyxFQUFFLFdBQVc7WUFDbEIsV0FBVyxFQUFFLHVDQUF1QztZQUNwRCxPQUFPLEVBQUUsSUFBSTtTQUNkO1FBQ0Q7WUFDRSxFQUFFLEVBQUUsVUFBVTtZQUNkLEtBQUssRUFBRSxjQUFjO1lBQ3JCLFdBQVcsRUFBRSwrQ0FBK0M7WUFDNUQsT0FBTyxFQUFFLEtBQUs7U0FDZjtRQUNEO1lBQ0UsRUFBRSxFQUFFLFdBQVc7WUFDZixLQUFLLEVBQUUsbUJBQW1CO1lBQzFCLFdBQVcsRUFBRSw4Q0FBOEM7WUFDM0QsT0FBTyxFQUFFLElBQUk7U0FDZDtLQUNGLENBQUMsQ0FBQTtJQUVGLE1BQU0sZ0JBQWdCLEdBQUcsQ0FBQyxFQUFVLEVBQUUsRUFBRTtRQUN0QyxjQUFjLENBQ1osV0FBVyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUMzQixVQUFVLENBQUMsRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLFVBQVUsRUFBRSxPQUFPLEVBQUUsQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FDcEYsQ0FDRixDQUFBO0lBQ0gsQ0FBQyxDQUFBO0lBRUQsT0FBTyxDQUNMLHVCQUFDLHdCQUFjLElBQUMsS0FBSyxFQUFDLGFBQWEsRUFBQyxXQUFXLEVBQUMscUNBQXFDLFlBQ25GLGdDQUFLLFNBQVMsRUFBQyx5QkFBeUIsWUFDdEMsZ0NBQUssU0FBUyxFQUFDLFdBQVcsWUFDdkIsV0FBVyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLENBQzdCLGlDQUF5QixTQUFTLEVBQUMsd0NBQXdDLGFBQ3pFLDRDQUNFLCtCQUFJLFNBQVMsRUFBQywyQkFBMkIsWUFBRSxVQUFVLENBQUMsS0FBSyxHQUFNLEVBQ2pFLDhCQUFHLFNBQVMsRUFBQyx1QkFBdUIsWUFBRSxVQUFVLENBQUMsV0FBVyxHQUFLLElBQzdELEVBQ04sbUNBQ0UsT0FBTyxFQUFFLEdBQUcsRUFBRTtnQ0FDWixnQkFBZ0IsQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLENBQUE7NEJBQ2pDLENBQUMsRUFDRCxTQUFTLEVBQUUsNkVBQ1QsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxhQUN4QyxFQUFFLFlBRUYsaUNBQ0UsU0FBUyxFQUFFLDZFQUNULFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsZUFDekMsRUFBRSxHQUNGLEdBQ0ssS0FsQkQsVUFBVSxDQUFDLEVBQUUsQ0FtQmpCLENBQ1AsQ0FBQyxHQUNFLEdBQ0YsR0FDUyxDQUNsQixDQUFBO0FBQ0gsQ0FBQztBQTVERCw4QkE0REMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL2VyaWNoYW1pbHQwbi9yZXBvcy9sb2RnZTJhL2wyYS1tb2JpbGUtYXBwL3NyYy9wYWdlcy9QcmVmZXJlbmNlcy50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgU2V0dGluZ3NMYXlvdXQgZnJvbSAnLi4vY29tcG9uZW50cy9TZXR0aW5nc0xheW91dCdcblxuaW50ZXJmYWNlIFByZWZlcmVuY2VTZXR0aW5nIHtcbiAgaWQ6IHN0cmluZ1xuICB0aXRsZTogc3RyaW5nXG4gIGRlc2NyaXB0aW9uOiBzdHJpbmdcbiAgZW5hYmxlZDogYm9vbGVhblxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBQcmVmZXJlbmNlcygpIHtcbiAgY29uc3QgW3ByZWZlcmVuY2VzLCBzZXRQcmVmZXJlbmNlc10gPSB1c2VTdGF0ZTxQcmVmZXJlbmNlU2V0dGluZ1tdPihbXG4gICAge1xuICAgICAgaWQ6ICdkYXJrTW9kZScsXG4gICAgICB0aXRsZTogJ0RhcmsgTW9kZScsXG4gICAgICBkZXNjcmlwdGlvbjogJ1VzZSBkYXJrIHRoZW1lIGFjcm9zcyB0aGUgYXBwbGljYXRpb24nLFxuICAgICAgZW5hYmxlZDogdHJ1ZSxcbiAgICB9LFxuICAgIHtcbiAgICAgIGlkOiAnYXV0b0Jvb2snLFxuICAgICAgdGl0bGU6ICdBdXRvIEJvb2tpbmcnLFxuICAgICAgZGVzY3JpcHRpb246ICdFbmFibGUgYXV0b21hdGljIGJvb2tpbmcgZm9yIHJlZ3VsYXIgc2Vzc2lvbnMnLFxuICAgICAgZW5hYmxlZDogZmFsc2UsXG4gICAgfSxcbiAgICB7XG4gICAgICBpZDogJ3JlbWluZGVycycsXG4gICAgICB0aXRsZTogJ1Nlc3Npb24gUmVtaW5kZXJzJyxcbiAgICAgIGRlc2NyaXB0aW9uOiAnR2V0IHJlbWluZGVycyBiZWZvcmUgeW91ciBzY2hlZHVsZWQgc2Vzc2lvbnMnLFxuICAgICAgZW5hYmxlZDogdHJ1ZSxcbiAgICB9LFxuICBdKVxuXG4gIGNvbnN0IHRvZ2dsZVByZWZlcmVuY2UgPSAoaWQ6IHN0cmluZykgPT4ge1xuICAgIHNldFByZWZlcmVuY2VzKFxuICAgICAgcHJlZmVyZW5jZXMubWFwKHByZWZlcmVuY2UgPT5cbiAgICAgICAgcHJlZmVyZW5jZS5pZCA9PT0gaWQgPyB7IC4uLnByZWZlcmVuY2UsIGVuYWJsZWQ6ICFwcmVmZXJlbmNlLmVuYWJsZWQgfSA6IHByZWZlcmVuY2VcbiAgICAgIClcbiAgICApXG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxTZXR0aW5nc0xheW91dCB0aXRsZT1cIlByZWZlcmVuY2VzXCIgZGVzY3JpcHRpb249XCJDdXN0b21pemUgeW91ciBhcHBsaWNhdGlvbiBzZXR0aW5nc1wiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJiZy13aGl0ZSByb3VuZGVkLXhsIHAtOFwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNwYWNlLXktNlwiPlxuICAgICAgICAgIHtwcmVmZXJlbmNlcy5tYXAocHJlZmVyZW5jZSA9PiAoXG4gICAgICAgICAgICA8ZGl2IGtleT17cHJlZmVyZW5jZS5pZH0gY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIHB5LTRcIj5cbiAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICA8aDMgY2xhc3NOYW1lPVwidGV4dC1ncmF5LTkwMCBmb250LW1lZGl1bVwiPntwcmVmZXJlbmNlLnRpdGxlfTwvaDM+XG4gICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1ncmF5LTUwMCB0ZXh0LXNtXCI+e3ByZWZlcmVuY2UuZGVzY3JpcHRpb259PC9wPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgICAgIHRvZ2dsZVByZWZlcmVuY2UocHJlZmVyZW5jZS5pZClcbiAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17YHJlbGF0aXZlIGlubGluZS1mbGV4IGgtNiB3LTExIGl0ZW1zLWNlbnRlciByb3VuZGVkLWZ1bGwgdHJhbnNpdGlvbi1jb2xvcnMgJHtcbiAgICAgICAgICAgICAgICAgIHByZWZlcmVuY2UuZW5hYmxlZCA/ICdiZy1bIzMzM2U0OF0nIDogJ2JnLWdyYXktMjAwJ1xuICAgICAgICAgICAgICAgIH1gfVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17YGlubGluZS1ibG9jayBoLTQgdy00IHRyYW5zZm9ybSByb3VuZGVkLWZ1bGwgYmctd2hpdGUgdHJhbnNpdGlvbi10cmFuc2Zvcm0gJHtcbiAgICAgICAgICAgICAgICAgICAgcHJlZmVyZW5jZS5lbmFibGVkID8gJ3RyYW5zbGF0ZS14LTYnIDogJ3RyYW5zbGF0ZS14LTEnXG4gICAgICAgICAgICAgICAgICB9YH1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICkpfVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvU2V0dGluZ3NMYXlvdXQ+XG4gIClcbn1cbiJdLCJ2ZXJzaW9uIjozfQ==