{"file":"/Users/erichamilt0n/repos/lodge2a/l2a-mobile-app/src/setupTests.ts","mappings":";;AAAA,qCAAmC;AACnC,+BAAgD;AAChD,kDAAmD;AAGnD,kCAAkC;AAClC,IAAA,iBAAS,EAAC;IACR,eAAe,EAAE,aAAa;CAC/B,CAAC,CAAC;AAEH,4BAA4B;AAC5B,MAAM,wBAAwB;IAA9B;QACE;;;;mBAAU,IAAI,CAAC,EAAE,EAAE;WAAC;QACpB;;;;mBAAa,IAAI,CAAC,EAAE,EAAE;WAAC;QACvB;;;;mBAAY,IAAI,CAAC,EAAE,EAAE;WAAC;IACxB,CAAC;CAAA;AAED,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,sBAAsB,EAAE;IACpD,QAAQ,EAAE,IAAI;IACd,YAAY,EAAE,IAAI;IAClB,KAAK,EAAE,wBAAwB;CAChC,CAAC,CAAC;AAEH,oEAAoE;AACpE,MAAM,oBAAoB,GAAG,OAAO,CAAC,KAAK,CAAC;AAC3C,MAAM,mBAAmB,GAAG,OAAO,CAAC,IAAI,CAAC;AAEzC,SAAS,CAAC,GAAG,EAAE;IACb,OAAO,CAAC,KAAK,GAAG,CAAC,GAAG,IAAW,EAAE,EAAE;QACjC,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/B,IACE,OAAO,CAAC,QAAQ,CAAC,wCAAwC,CAAC;YAC1D,OAAO,CAAC,QAAQ,CAAC,wBAAwB,CAAC;YAC1C,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,EAC9B,CAAC;YACD,OAAO;QACT,CAAC;QACD,oBAAoB,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IAC5C,CAAC,CAAC;IAEF,OAAO,CAAC,IAAI,GAAG,CAAC,GAAG,IAAW,EAAE,EAAE;QAChC,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/B,IAAI,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,CAAC;YACnC,OAAO;QACT,CAAC;QACD,mBAAmB,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IAC3C,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,GAAG,EAAE;IACZ,OAAO,CAAC,KAAK,GAAG,oBAAoB,CAAC;IACrC,OAAO,CAAC,IAAI,GAAG,mBAAmB,CAAC;AACrC,CAAC,CAAC,CAAC;AAEH,kDAAkD;AAClD,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,WAAW,EAAX,kBAAW,EAAE,WAAW,EAAX,kBAAW,EAAE,CAAC,CAAC","names":[],"sources":["/Users/erichamilt0n/repos/lodge2a/l2a-mobile-app/src/setupTests.ts"],"sourcesContent":["import '@testing-library/jest-dom';\nimport { TextEncoder, TextDecoder } from 'util';\nimport { configure } from '@testing-library/react';\nimport type { Config } from '@jest/types';\n\n// Configure React Testing Library\nconfigure({\n  testIdAttribute: 'data-testid',\n});\n\n// Mock IntersectionObserver\nclass MockIntersectionObserver {\n  observe = jest.fn();\n  disconnect = jest.fn();\n  unobserve = jest.fn();\n}\n\nObject.defineProperty(window, 'IntersectionObserver', {\n  writable: true,\n  configurable: true,\n  value: MockIntersectionObserver,\n});\n\n// Mock console methods to suppress React 18 console errors/warnings\nconst originalConsoleError = console.error;\nconst originalConsoleWarn = console.warn;\n\nbeforeAll(() => {\n  console.error = (...args: any[]) => {\n    const message = args.join(' ');\n    if (\n      message.includes('ReactDOM.render is no longer supported') ||\n      message.includes('Use createRoot instead') ||\n      message.includes('StrictMode')\n    ) {\n      return;\n    }\n    originalConsoleError.apply(console, args);\n  };\n\n  console.warn = (...args: any[]) => {\n    const message = args.join(' ');\n    if (message.includes('StrictMode')) {\n      return;\n    }\n    originalConsoleWarn.apply(console, args);\n  };\n});\n\nafterAll(() => {\n  console.error = originalConsoleError;\n  console.warn = originalConsoleWarn;\n});\n\n// Add TextEncoder and TextDecoder to global scope\nObject.assign(global, { TextDecoder, TextEncoder });\n\n// Add Jest DOM matchers\ndeclare global {\n  namespace jest {\n    interface Matchers<R> {\n      toBeInTheDocument(): R;\n      toHaveStyle(style: Record<string, any>): R;\n    }\n  }\n}\n"],"version":3}