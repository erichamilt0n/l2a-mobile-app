{"file":"/Users/erichamilt0n/repos/lodge2a/l2a-mobile-app/src/pages/Reservations.test.tsx","mappings":"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","names":[],"sources":["/Users/erichamilt0n/repos/lodge2a/l2a-mobile-app/src/pages/Reservations.test.tsx"],"sourcesContent":["import React from 'react'\nimport { render, screen, fireEvent } from '@testing-library/react'\nimport { BrowserRouter } from 'react-router-dom'\nimport Reservations from './Reservations'\n\njest.mock('../components/icons', () => ({\n  BayIcon: () => <div data-testid=\"bay-icon\">Bay Icon</div>,\n  TableIcon: () => <div data-testid=\"table-icon\">Table Icon</div>,\n}))\n\ndescribe('Reservations', () => {\n  const renderReservations = () => {\n    render(\n      <BrowserRouter>\n        <Reservations />\n      </BrowserRouter>\n    )\n  }\n\n  it('renders reservation page header', () => {\n    renderReservations()\n    expect(screen.getByText('Make a Reservation')).toBeInTheDocument()\n    expect(screen.getByText('Book your bay or table')).toBeInTheDocument()\n  })\n\n  describe('Reservation Type Selection', () => {\n    it('renders reservation type buttons', () => {\n      renderReservations()\n      expect(screen.getByText('Bay Reservation')).toBeInTheDocument()\n      expect(screen.getByText('Table Reservation')).toBeInTheDocument()\n      expect(screen.getByTestId('bay-icon')).toBeInTheDocument()\n      expect(screen.getByTestId('table-icon')).toBeInTheDocument()\n    })\n  })\n\n  describe('Date Selection', () => {\n    it('renders date selection section', () => {\n      renderReservations()\n      expect(screen.getByText('Select Date')).toBeInTheDocument()\n    })\n\n    it('displays 7 date buttons', () => {\n      renderReservations()\n      const today = new Date()\n      const dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n      \n      // Get all date buttons\n      const dateButtons = screen.getAllByRole('button').filter(button => {\n        const text = button.textContent\n        return dayNames.some(day => text?.includes(day))\n      })\n      \n      expect(dateButtons).toHaveLength(7)\n      \n      // Check if first date is today\n      const todayShort = today.toLocaleDateString('en-US', { weekday: 'short' })\n      const todayDate = today.getDate().toString()\n      expect(dateButtons[0].textContent).toContain(todayShort)\n      expect(dateButtons[0].textContent).toContain(todayDate)\n    })\n  })\n\n  describe('Time Selection', () => {\n    it('renders time selection section', () => {\n      renderReservations()\n      expect(screen.getByText('Select Time')).toBeInTheDocument()\n    })\n\n    it('displays all time slots', () => {\n      renderReservations()\n      expect(screen.getByText('9:00 AM')).toBeInTheDocument()\n      expect(screen.getByText('10:00 AM')).toBeInTheDocument()\n      expect(screen.getByText('11:00 AM')).toBeInTheDocument()\n      expect(screen.getByText('12:00 PM')).toBeInTheDocument()\n      expect(screen.getByText('1:00 PM')).toBeInTheDocument()\n      expect(screen.getByText('2:00 PM')).toBeInTheDocument()\n    })\n\n    it('disables unavailable time slots', () => {\n      renderReservations()\n      const tenAMSlot = screen.getByText('10:00 AM').closest('button')\n      const onePMSlot = screen.getByText('1:00 PM').closest('button')\n      \n      expect(tenAMSlot).toBeDisabled()\n      expect(onePMSlot).toBeDisabled()\n    })\n\n    it('enables available time slots', () => {\n      renderReservations()\n      const nineAMSlot = screen.getByText('9:00 AM').closest('button')\n      const elevenAMSlot = screen.getByText('11:00 AM').closest('button')\n      const twoPMSlot = screen.getByText('2:00 PM').closest('button')\n      \n      expect(nineAMSlot).not.toBeDisabled()\n      expect(elevenAMSlot).not.toBeDisabled()\n      expect(twoPMSlot).not.toBeDisabled()\n    })\n  })\n\n  describe('Guest Count Selection', () => {\n    it('renders guest count section', () => {\n      renderReservations()\n      expect(screen.getByText('Number of Guests')).toBeInTheDocument()\n      expect(screen.getByText('4')).toBeInTheDocument() // Default guest count\n    })\n\n    it('renders increment and decrement buttons', () => {\n      renderReservations()\n      const buttons = screen.getAllByRole('button')\n      const decrementButton = buttons.find(button => button.innerHTML.includes('M20 12H4'))\n      const incrementButton = buttons.find(button => button.innerHTML.includes('M12 4v16m8-8H4'))\n      \n      expect(decrementButton).toBeInTheDocument()\n      expect(incrementButton).toBeInTheDocument()\n    })\n  })\n\n  it('renders complete reservation button', () => {\n    renderReservations()\n    const completeButton = screen.getByText('Complete Reservation')\n    expect(completeButton).toBeInTheDocument()\n    expect(completeButton.closest('button')).toHaveClass(\n      'p-4 md:p-6 rounded-xl transition-colors bg-[#2d3339] hover:bg-[#3a424a] text-white w-full'\n    )\n  })\n})\n"],"version":3}