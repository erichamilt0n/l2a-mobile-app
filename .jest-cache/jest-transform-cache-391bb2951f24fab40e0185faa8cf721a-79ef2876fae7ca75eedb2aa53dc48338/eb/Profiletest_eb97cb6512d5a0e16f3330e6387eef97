7707f4933cbbdb834533ea9d3eafb091
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("@testing-library/react");
const react_router_dom_1 = require("react-router-dom");
const Profile_1 = __importDefault(require("./Profile"));
describe('Profile', () => {
    const renderProfile = () => {
        (0, react_1.render)((0, jsx_runtime_1.jsx)(react_router_dom_1.BrowserRouter, { children: (0, jsx_runtime_1.jsx)(Profile_1.default, {}) }));
    };
    it('renders profile information', () => {
        renderProfile();
        // Check for profile header
        expect(react_1.screen.getByText('Profile')).toBeInTheDocument();
        expect(react_1.screen.getByText('Manage your account and preferences')).toBeInTheDocument();
        // Check for user information
        expect(react_1.screen.getByText('JD')).toBeInTheDocument();
        expect(react_1.screen.getByText('John Doe')).toBeInTheDocument();
        expect(react_1.screen.getByText('john.doe@example.com')).toBeInTheDocument();
        expect(react_1.screen.getByText('Member since Dec 2024')).toBeInTheDocument();
    });
    it('renders stat cards with correct information', () => {
        renderProfile();
        // Check stat cards
        expect(react_1.screen.getByText('Total Spent')).toBeInTheDocument();
        expect(react_1.screen.getByText('$450.98')).toBeInTheDocument();
        expect(react_1.screen.getByText('Reservations')).toBeInTheDocument();
        expect(react_1.screen.getByText('12')).toBeInTheDocument();
        expect(react_1.screen.getByText('Events Attended')).toBeInTheDocument();
        expect(react_1.screen.getByText('5')).toBeInTheDocument();
        expect(react_1.screen.getByText('Pro Shop Points')).toBeInTheDocument();
        expect(react_1.screen.getByText('1,250')).toBeInTheDocument();
    });
    it('renders payment history section', () => {
        renderProfile();
        // Check payment history header
        expect(react_1.screen.getByText('Payment History')).toBeInTheDocument();
        expect(react_1.screen.getByText('View All')).toBeInTheDocument();
        // Check payment history entries
        expect(react_1.screen.getByText('Bay Reservation - 2 Hours')).toBeInTheDocument();
        expect(react_1.screen.getByText('$120.00')).toBeInTheDocument();
        expect(react_1.screen.getByText('Dec 15, 2024')).toBeInTheDocument();
        expect(react_1.screen.getByText('Pro Shop Purchase - Golf Balls')).toBeInTheDocument();
        expect(react_1.screen.getByText('$45.99')).toBeInTheDocument();
        expect(react_1.screen.getByText('Dec 10, 2024')).toBeInTheDocument();
        expect(react_1.screen.getByText('Monthly Membership Fee')).toBeInTheDocument();
        expect(react_1.screen.getByText('$199.99')).toBeInTheDocument();
        expect(react_1.screen.getByText('Dec 5, 2024')).toBeInTheDocument();
    });
    it('applies correct status color classes', () => {
        renderProfile();
        // All statuses in the mock data are 'completed', so we should find green status indicators
        const statusElements = react_1.screen.getAllByText('completed');
        statusElements.forEach(element => {
            expect(element).toHaveClass('bg-green-100 text-green-800');
        });
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2VyaWNoYW1pbHQwbi9yZXBvcy9sb2RnZTJhL2wyYS1tb2JpbGUtYXBwL3NyYy9wYWdlcy9Qcm9maWxlLnRlc3QudHN4IiwibWFwcGluZ3MiOiI7Ozs7OztBQUNBLGtEQUF1RDtBQUN2RCx1REFBZ0Q7QUFDaEQsd0RBQStCO0FBRS9CLFFBQVEsQ0FBQyxTQUFTLEVBQUUsR0FBRyxFQUFFO0lBQ3ZCLE1BQU0sYUFBYSxHQUFHLEdBQUcsRUFBRTtRQUN6QixJQUFBLGNBQU0sRUFDSix1QkFBQyxnQ0FBYSxjQUNaLHVCQUFDLGlCQUFPLEtBQUcsR0FDRyxDQUNqQixDQUFBO0lBQ0gsQ0FBQyxDQUFBO0lBRUQsRUFBRSxDQUFDLDZCQUE2QixFQUFFLEdBQUcsRUFBRTtRQUNyQyxhQUFhLEVBQUUsQ0FBQTtRQUVmLDJCQUEyQjtRQUMzQixNQUFNLENBQUMsY0FBTSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLGlCQUFpQixFQUFFLENBQUE7UUFDdkQsTUFBTSxDQUFDLGNBQU0sQ0FBQyxTQUFTLENBQUMscUNBQXFDLENBQUMsQ0FBQyxDQUFDLGlCQUFpQixFQUFFLENBQUE7UUFFbkYsNkJBQTZCO1FBQzdCLE1BQU0sQ0FBQyxjQUFNLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsaUJBQWlCLEVBQUUsQ0FBQTtRQUNsRCxNQUFNLENBQUMsY0FBTSxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLGlCQUFpQixFQUFFLENBQUE7UUFDeEQsTUFBTSxDQUFDLGNBQU0sQ0FBQyxTQUFTLENBQUMsc0JBQXNCLENBQUMsQ0FBQyxDQUFDLGlCQUFpQixFQUFFLENBQUE7UUFDcEUsTUFBTSxDQUFDLGNBQU0sQ0FBQyxTQUFTLENBQUMsdUJBQXVCLENBQUMsQ0FBQyxDQUFDLGlCQUFpQixFQUFFLENBQUE7SUFDdkUsQ0FBQyxDQUFDLENBQUE7SUFFRixFQUFFLENBQUMsNkNBQTZDLEVBQUUsR0FBRyxFQUFFO1FBQ3JELGFBQWEsRUFBRSxDQUFB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QUE7QUFDSixDQUFDLENBQUMsQ0FBQSIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvZXJpY2hhbWlsdDBuL3JlcG9zL2xvZGdlMmEvbDJhLW1vYmlsZS1hcHAvc3JjL3BhZ2VzL1Byb2ZpbGUudGVzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgcmVuZGVyLCBzY3JlZW4gfSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0J1xuaW1wb3J0IHsgQnJvd3NlclJvdXRlciB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nXG5pbXBvcnQgUHJvZmlsZSBmcm9tICcuL1Byb2ZpbGUnXG5cbmRlc2NyaWJlKCdQcm9maWxlJywgKCkgPT4ge1xuICBjb25zdCByZW5kZXJQcm9maWxlID0gKCkgPT4ge1xuICAgIHJlbmRlcihcbiAgICAgIDxCcm93c2VyUm91dGVyPlxuICAgICAgICA8UHJvZmlsZSAvPlxuICAgICAgPC9Ccm93c2VyUm91dGVyPlxuICAgIClcbiAgfVxuXG4gIGl0KCdyZW5kZXJzIHByb2ZpbGUgaW5mb3JtYXRpb24nLCAoKSA9PiB7XG4gICAgcmVuZGVyUHJvZmlsZSgpXG4gICAgXG4gICAgLy8gQ2hlY2sgZm9yIHByb2ZpbGUgaGVhZGVyXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ1Byb2ZpbGUnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdNYW5hZ2UgeW91ciBhY2NvdW50IGFuZCBwcmVmZXJlbmNlcycpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgXG4gICAgLy8gQ2hlY2sgZm9yIHVzZXIgaW5mb3JtYXRpb25cbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnSkQnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdKb2huIERvZScpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ2pvaG4uZG9lQGV4YW1wbGUuY29tJykpLnRvQmVJblRoZURvY3VtZW50KClcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnTWVtYmVyIHNpbmNlIERlYyAyMDI0JykpLnRvQmVJblRoZURvY3VtZW50KClcbiAgfSlcblxuICBpdCgncmVuZGVycyBzdGF0IGNhcmRzIHdpdGggY29ycmVjdCBpbmZvcm1hdGlvbicsICgpID0+IHtcbiAgICByZW5kZXJQcm9maWxlKClcbiAgICBcbiAgICAvLyBDaGVjayBzdGF0IGNhcmRzXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ1RvdGFsIFNwZW50JykpLnRvQmVJblRoZURvY3VtZW50KClcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnJDQ1MC45OCcpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ1Jlc2VydmF0aW9ucycpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJzEyJykpLnRvQmVJblRoZURvY3VtZW50KClcbiAgICBcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnRXZlbnRzIEF0dGVuZGVkJykpLnRvQmVJblRoZURvY3VtZW50KClcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnNScpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ1BybyBTaG9wIFBvaW50cycpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJzEsMjUwJykpLnRvQmVJblRoZURvY3VtZW50KClcbiAgfSlcblxuICBpdCgncmVuZGVycyBwYXltZW50IGhpc3Rvcnkgc2VjdGlvbicsICgpID0+IHtcbiAgICByZW5kZXJQcm9maWxlKClcbiAgICBcbiAgICAvLyBDaGVjayBwYXltZW50IGhpc3RvcnkgaGVhZGVyXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ1BheW1lbnQgSGlzdG9yeScpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ1ZpZXcgQWxsJykpLnRvQmVJblRoZURvY3VtZW50KClcbiAgICBcbiAgICAvLyBDaGVjayBwYXltZW50IGhpc3RvcnkgZW50cmllc1xuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdCYXkgUmVzZXJ2YXRpb24gLSAyIEhvdXJzJykpLnRvQmVJblRoZURvY3VtZW50KClcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnJDEyMC4wMCcpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ0RlYyAxNSwgMjAyNCcpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ1BybyBTaG9wIFB1cmNoYXNlIC0gR29sZiBCYWxscycpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJyQ0NS45OScpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ0RlYyAxMCwgMjAyNCcpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ01vbnRobHkgTWVtYmVyc2hpcCBGZWUnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCckMTk5Ljk5JykpLnRvQmVJblRoZURvY3VtZW50KClcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnRGVjIDUsIDIwMjQnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICB9KVxuXG4gIGl0KCdhcHBsaWVzIGNvcnJlY3Qgc3RhdHVzIGNvbG9yIGNsYXNzZXMnLCAoKSA9PiB7XG4gICAgcmVuZGVyUHJvZmlsZSgpXG4gICAgXG4gICAgLy8gQWxsIHN0YXR1c2VzIGluIHRoZSBtb2NrIGRhdGEgYXJlICdjb21wbGV0ZWQnLCBzbyB3ZSBzaG91bGQgZmluZCBncmVlbiBzdGF0dXMgaW5kaWNhdG9yc1xuICAgIGNvbnN0IHN0YXR1c0VsZW1lbnRzID0gc2NyZWVuLmdldEFsbEJ5VGV4dCgnY29tcGxldGVkJylcbiAgICBzdGF0dXNFbGVtZW50cy5mb3JFYWNoKGVsZW1lbnQgPT4ge1xuICAgICAgZXhwZWN0KGVsZW1lbnQpLnRvSGF2ZUNsYXNzKCdiZy1ncmVlbi0xMDAgdGV4dC1ncmVlbi04MDAnKVxuICAgIH0pXG4gIH0pXG59KVxuIl0sInZlcnNpb24iOjN9