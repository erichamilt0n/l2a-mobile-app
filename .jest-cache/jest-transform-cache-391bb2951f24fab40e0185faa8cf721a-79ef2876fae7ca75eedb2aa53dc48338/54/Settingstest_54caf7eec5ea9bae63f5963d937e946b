850d59628862bbc010ad10a0a759285e
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("@testing-library/react");
const react_router_dom_1 = require("react-router-dom");
const Settings_1 = __importDefault(require("./Settings"));
describe('Settings', () => {
    const renderSettings = () => {
        (0, react_1.render)((0, jsx_runtime_1.jsx)(react_router_dom_1.BrowserRouter, { children: (0, jsx_runtime_1.jsx)(Settings_1.default, {}) }));
    };
    it('renders settings header', () => {
        renderSettings();
        expect(react_1.screen.getByText('Settings')).toBeInTheDocument();
    });
    describe('Personal Information Section', () => {
        beforeEach(() => {
            renderSettings();
        });
        it('renders personal information section header', () => {
            expect(react_1.screen.getByText('Personal Information')).toBeInTheDocument();
            expect(react_1.screen.getByText('Update your personal details')).toBeInTheDocument();
        });
        it('renders edit profile button', () => {
            expect(react_1.screen.getByText('Edit Profile')).toBeInTheDocument();
        });
        it('displays user information correctly', () => {
            expect(react_1.screen.getByText('john.rambo@badass.com')).toBeInTheDocument();
            expect(react_1.screen.getByText('+1 (555) 123-4567')).toBeInTheDocument();
            expect(react_1.screen.getByText('123 Main Street')).toBeInTheDocument();
            expect(react_1.screen.getByText('Hope')).toBeInTheDocument();
            expect(react_1.screen.getByText('WA')).toBeInTheDocument();
            expect(react_1.screen.getByText('98826')).toBeInTheDocument();
        });
        it('renders all personal information field labels', () => {
            const labels = ['Email', 'Phone', 'Address', 'City', 'State', 'Zip'];
            labels.forEach(label => {
                expect(react_1.screen.getByText(label)).toBeInTheDocument();
            });
        });
    });
    describe('Payment History Section', () => {
        beforeEach(() => {
            renderSettings();
        });
        it('renders payment history section header', () => {
            expect(react_1.screen.getByText('Payment History')).toBeInTheDocument();
            expect(react_1.screen.getByText('View and manage your billing information')).toBeInTheDocument();
        });
        it('renders billing action buttons', () => {
            expect(react_1.screen.getByText('Edit Billing')).toBeInTheDocument();
            expect(react_1.screen.getByText('View All')).toBeInTheDocument();
        });
        it('displays payment history entries', () => {
            // Check for payment descriptions
            expect(react_1.screen.getByText('Bay Reservation - 2 Hours')).toBeInTheDocument();
            expect(react_1.screen.getByText('Pro Shop Purchase - Golf Balls')).toBeInTheDocument();
            expect(react_1.screen.getByText('Monthly Membership Fee')).toBeInTheDocument();
            expect(react_1.screen.getByText('Table Reservation - Dinner')).toBeInTheDocument();
            // Check for payment amounts
            expect(react_1.screen.getByText('$120.00')).toBeInTheDocument();
            expect(react_1.screen.getByText('$45.99')).toBeInTheDocument();
            expect(react_1.screen.getByText('$199.99')).toBeInTheDocument();
            expect(react_1.screen.getByText('$85.00')).toBeInTheDocument();
            // Check for payment dates
            expect(react_1.screen.getByText('Dec 15, 2024')).toBeInTheDocument();
            expect(react_1.screen.getByText('Dec 10, 2024')).toBeInTheDocument();
            expect(react_1.screen.getByText('Dec 5, 2024')).toBeInTheDocument();
            expect(react_1.screen.getByText('Nov 28, 2024')).toBeInTheDocument();
        });
    });
    describe('Status Color Function', () => {
        it('renders status with correct color', () => {
            renderSettings();
            const paymentItems = react_1.screen.getAllByText('Completed');
            const firstPaymentStatus = paymentItems[0].closest('span');
            expect(firstPaymentStatus).toHaveClass('bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm');
        });
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,