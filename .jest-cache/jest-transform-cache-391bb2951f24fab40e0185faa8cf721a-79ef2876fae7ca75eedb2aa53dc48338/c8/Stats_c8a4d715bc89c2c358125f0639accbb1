83b99a7f7cc8f1a963875a44174a1171
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const Button_1 = require("../components/ui/Button");
const Card_1 = require("../components/ui/Card");
const Grid_1 = require("../components/layout/Grid");
const StatCard_1 = require("../components/ui/StatCard");
function Stats() {
    const stats = {
        titlesPlayed: 24,
        averageScore: 714,
        bestScore: 1075,
        hoursPlayed: 7,
    };
    const recentScores = [
        { date: 'Dec 15, 2024', score: 82, course: 'Lodge2A Main Course' },
        { date: 'Dec 10, 2024', score: 85, course: 'Lodge2A Main Course' },
        { date: 'Dec 5, 2024', score: 79, course: 'Lodge2A Main Course' },
        { date: 'Nov 30, 2024', score: 81, course: 'Lodge2A Main Course' },
    ];
    return ((0, jsx_runtime_1.jsxs)("div", { className: "container mx-auto px-4 py-6 md:py-8", children: [(0, jsx_runtime_1.jsxs)("div", { className: "mb-6 md:mb-8", children: [(0, jsx_runtime_1.jsx)("h1", { className: "text-2xl md:text-3xl font-bold text-white mb-2", children: "Your Stats" }), (0, jsx_runtime_1.jsx)("p", { className: "text-gray-400", children: "Track your performance and progress" })] }), (0, jsx_runtime_1.jsxs)(Grid_1.Grid, { cols: 1, mdCols: 2, lgCols: 4, gap: 6, className: "mb-6 md:mb-8", children: [(0, jsx_runtime_1.jsx)(StatCard_1.StatCard, { title: "Titles Played", value: stats.titlesPlayed, icon: (0, jsx_runtime_1.jsx)("svg", { className: "w-5 h-5", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" }) }) }), (0, jsx_runtime_1.jsx)(StatCard_1.StatCard, { title: "Average Score", value: stats.averageScore.toLocaleString(), icon: (0, jsx_runtime_1.jsx)("svg", { className: "w-5 h-5", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M13 7h8m0 0v8m0-8l-8 8-4-4-6 6" }) }) }), (0, jsx_runtime_1.jsx)(StatCard_1.StatCard, { title: "Best Score", value: stats.bestScore.toLocaleString(), icon: (0, jsx_runtime_1.jsx)("svg", { className: "w-5 h-5", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z" }) }) }), (0, jsx_runtime_1.jsx)(StatCard_1.StatCard, { title: "Hours Played", value: stats.hoursPlayed, icon: (0, jsx_runtime_1.jsx)("svg", { className: "w-5 h-5", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: (0, jsx_runtime_1.jsx)("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" }) }) })] }), (0, jsx_runtime_1.jsxs)(Grid_1.Grid, { cols: 2, gap: 6, className: "grid-cols-1 lg:grid-cols-2", children: [(0, jsx_runtime_1.jsxs)(Card_1.Card, { children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex justify-between items-center mb-4", children: [(0, jsx_runtime_1.jsx)("h2", { className: "text-lg md:text-xl font-semibold text-white", children: "Recent Scores" }), (0, jsx_runtime_1.jsx)(Button_1.Button, { variant: "secondary", className: "flex-1 sm:flex-none", children: "View All" })] }), (0, jsx_runtime_1.jsx)("div", { className: "space-y-4", children: recentScores.map((score, index) => ((0, jsx_runtime_1.jsx)("div", { className: "flex items-center justify-between p-3 bg-dark-200 rounded-lg", children: (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center space-x-3", children: [(0, jsx_runtime_1.jsx)("div", { className: "w-10 h-10 rounded-full bg-[#2d3339] flex items-center justify-center flex-shrink-0", children: (0, jsx_runtime_1.jsx)("span", { className: "text-white font-bold", children: score.score }) }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("p", { className: "text-sm md:text-base text-white font-medium", children: score.course }), (0, jsx_runtime_1.jsx)("p", { className: "text-xs md:text-sm text-gray-400", children: score.date })] })] }) }, index))) })] }), (0, jsx_runtime_1.jsxs)(Card_1.Card, { children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex flex-col sm:flex-row items-start sm:items-center justify-between mb-4 space-y-3 sm:space-y-0", children: [(0, jsx_runtime_1.jsx)("h2", { className: "text-lg md:text-xl font-semibold text-white", children: "Score Trends" }), (0, jsx_runtime_1.jsxs)("div", { className: "flex w-full sm:w-auto space-x-2", children: [(0, jsx_runtime_1.jsx)(Button_1.Button, { variant: "primary", className: "flex-1 sm:flex-none", children: "Week" }), (0, jsx_runtime_1.jsx)(Button_1.Button, { variant: "secondary", className: "flex-1 sm:flex-none", children: "Month" }), (0, jsx_runtime_1.jsx)(Button_1.Button, { variant: "secondary", className: "flex-1 sm:flex-none", children: "Year" })] })] }), (0, jsx_runtime_1.jsx)("div", { className: "h-64 flex items-center justify-center text-gray-400", children: "Chart Component Here" })] })] })] }));
}
exports.default = Stats;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,