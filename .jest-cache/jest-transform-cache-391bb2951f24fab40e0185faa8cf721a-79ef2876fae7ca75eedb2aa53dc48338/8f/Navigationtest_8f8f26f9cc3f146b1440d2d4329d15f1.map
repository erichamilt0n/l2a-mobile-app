{"file":"/Users/erichamilt0n/repos/lodge2a/l2a-mobile-app/src/components/Navigation.test.tsx","mappings":"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","names":[],"sources":["/Users/erichamilt0n/repos/lodge2a/l2a-mobile-app/src/components/Navigation.test.tsx"],"sourcesContent":["import { render, screen, fireEvent } from '@testing-library/react'\nimport { BrowserRouter, MemoryRouter } from 'react-router-dom'\nimport Navigation from './Navigation'\nimport { MobileMenuButton } from './Navigation'\n\n// Mock useNavigate\nconst mockNavigate = jest.fn()\njest.mock('react-router-dom', () => ({\n  ...jest.requireActual('react-router-dom'),\n  useNavigate: () => mockNavigate,\n}))\n\ndescribe('Navigation', () => {\n  const mockOnClose = jest.fn()\n\n  beforeEach(() => {\n    jest.clearAllMocks()\n  })\n\n  it('renders navigation items', () => {\n    render(\n      <BrowserRouter>\n        <Navigation isOpen={true} onClose={mockOnClose} />\n      </BrowserRouter>\n    )\n\n    expect(screen.getByText('Dashboard')).toBeInTheDocument()\n    expect(screen.getByText('Reservations')).toBeInTheDocument()\n    expect(screen.getByText('Events')).toBeInTheDocument()\n    expect(screen.getByText('Stats')).toBeInTheDocument()\n    expect(screen.getByText('Pro Shop')).toBeInTheDocument()\n    expect(screen.getByText('Settings')).toBeInTheDocument()\n  })\n\n  it('calls onClose when clicking overlay', () => {\n    render(\n      <BrowserRouter>\n        <Navigation isOpen={true} onClose={mockOnClose} />\n      </BrowserRouter>\n    )\n\n    const overlay = screen.getByTestId('navigation-overlay')\n    fireEvent.click(overlay)\n    expect(mockOnClose).toHaveBeenCalled()\n  })\n\n  it('calls onClose when clicking a navigation item', () => {\n    render(\n      <BrowserRouter>\n        <Navigation isOpen={true} onClose={mockOnClose} />\n      </BrowserRouter>\n    )\n\n    fireEvent.click(screen.getByText('Dashboard'))\n    expect(mockOnClose).toHaveBeenCalled()\n  })\n\n  it('navigates to home on logout', () => {\n    render(\n      <BrowserRouter>\n        <Navigation isOpen={true} onClose={mockOnClose} />\n      </BrowserRouter>\n    )\n\n    fireEvent.click(screen.getByText('Logout'))\n    expect(mockNavigate).toHaveBeenCalledWith('/')\n  })\n\n  it('closes on mouse leave in tablet mode', () => {\n    render(\n      <BrowserRouter>\n        <Navigation isOpen={true} onClose={mockOnClose} />\n      </BrowserRouter>\n    )\n\n    const sidebar = screen.getByTestId('navigation-sidebar')\n    fireEvent.mouseLeave(sidebar)\n    expect(mockOnClose).toHaveBeenCalled()\n  })\n})\n\ndescribe('MobileMenuButton', () => {\n  it('renders and handles click', () => {\n    const mockOnClick = jest.fn()\n    render(<MobileMenuButton onClick={mockOnClick} />)\n\n    const button = screen.getByRole('button')\n    fireEvent.click(button)\n    expect(mockOnClick).toHaveBeenCalled()\n  })\n})\n"],"version":3}