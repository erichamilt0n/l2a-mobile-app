722ab2702ec7e793874dc5de16c0c690
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
jest.mock('react-router-dom', () => ({
    ...jest.requireActual('react-router-dom'),
    useNavigate: () => mockNavigate,
}));
const react_1 = require("@testing-library/react");
const react_router_dom_1 = require("react-router-dom");
const Navigation_1 = __importDefault(require("./Navigation"));
const Navigation_2 = require("./Navigation");
// Mock useNavigate
const mockNavigate = jest.fn();
describe('Navigation', () => {
    const mockOnClose = jest.fn();
    beforeEach(() => {
        jest.clearAllMocks();
    });
    it('renders navigation items', () => {
        (0, react_1.render)((0, jsx_runtime_1.jsx)(react_router_dom_1.BrowserRouter, { children: (0, jsx_runtime_1.jsx)(Navigation_1.default, { isOpen: true, onClose: mockOnClose }) }));
        expect(react_1.screen.getByText('Dashboard')).toBeInTheDocument();
        expect(react_1.screen.getByText('Reservations')).toBeInTheDocument();
        expect(react_1.screen.getByText('Events')).toBeInTheDocument();
        expect(react_1.screen.getByText('Stats')).toBeInTheDocument();
        expect(react_1.screen.getByText('Pro Shop')).toBeInTheDocument();
        expect(react_1.screen.getByText('Settings')).toBeInTheDocument();
    });
    it('calls onClose when clicking overlay', () => {
        (0, react_1.render)((0, jsx_runtime_1.jsx)(react_router_dom_1.BrowserRouter, { children: (0, jsx_runtime_1.jsx)(Navigation_1.default, { isOpen: true, onClose: mockOnClose }) }));
        const overlay = react_1.screen.getByTestId('navigation-overlay');
        react_1.fireEvent.click(overlay);
        expect(mockOnClose).toHaveBeenCalled();
    });
    it('calls onClose when clicking a navigation item', () => {
        (0, react_1.render)((0, jsx_runtime_1.jsx)(react_router_dom_1.BrowserRouter, { children: (0, jsx_runtime_1.jsx)(Navigation_1.default, { isOpen: true, onClose: mockOnClose }) }));
        react_1.fireEvent.click(react_1.screen.getByText('Dashboard'));
        expect(mockOnClose).toHaveBeenCalled();
    });
    it('navigates to home on logout', () => {
        (0, react_1.render)((0, jsx_runtime_1.jsx)(react_router_dom_1.BrowserRouter, { children: (0, jsx_runtime_1.jsx)(Navigation_1.default, { isOpen: true, onClose: mockOnClose }) }));
        react_1.fireEvent.click(react_1.screen.getByText('Logout'));
        expect(mockNavigate).toHaveBeenCalledWith('/');
    });
    it('closes on mouse leave in tablet mode', () => {
        (0, react_1.render)((0, jsx_runtime_1.jsx)(react_router_dom_1.BrowserRouter, { children: (0, jsx_runtime_1.jsx)(Navigation_1.default, { isOpen: true, onClose: mockOnClose }) }));
        const sidebar = react_1.screen.getByTestId('navigation-sidebar');
        react_1.fireEvent.mouseLeave(sidebar);
        expect(mockOnClose).toHaveBeenCalled();
    });
});
describe('MobileMenuButton', () => {
    it('renders and handles click', () => {
        const mockOnClick = jest.fn();
        (0, react_1.render)((0, jsx_runtime_1.jsx)(Navigation_2.MobileMenuButton, { onClick: mockOnClick }));
        const button = react_1.screen.getByRole('button');
        react_1.fireEvent.click(button);
        expect(mockOnClick).toHaveBeenCalled();
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2VyaWNoYW1pbHQwbi9yZXBvcy9sb2RnZTJhL2wyYS1tb2JpbGUtYXBwL3NyYy9jb21wb25lbnRzL05hdmlnYXRpb24udGVzdC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBT0EsSUFBSSxDQUFDLElBQUksQ0FBQyxrQkFBa0IsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0lBQ25DLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxrQkFBa0IsQ0FBQztJQUN6QyxXQUFXLEVBQUUsR0FBRyxFQUFFLENBQUMsWUFBWTtDQUNoQyxDQUFDLENBQUMsQ0FBQTtBQVZILGtEQUFrRTtBQUNsRSx1REFBOEQ7QUFDOUQsOERBQXFDO0FBQ3JDLDZDQUErQztBQUUvQyxtQkFBbUI7QUFDbkIsTUFBTSxZQUFZLEdBQUcsSUFBSSxDQUFDLEVBQUUsRUFBRSxDQUFBO0FBTTlCLFFBQVEsQ0FBQyxZQUFZLEVBQUUsR0FBRyxFQUFFO0lBQzFCLE1BQU0sV0FBVyxHQUFHLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQTtJQUU3QixVQUFVLENBQUMsR0FBRyxFQUFFO1FBQ2QsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFBO0lBQ3RCLENBQUMsQ0FBQyxDQUFBO0lBRUYsRUFBRSxDQUFDLDBCQUEwQixFQUFFLEdBQUcsRUFBRTtRQUNsQyxJQUFBLGNBQU0sRUFDSix1QkFBQyxnQ0FBYSxjQUNaLHVCQUFDLG9CQUFVLElBQUMsTUFBTSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsV0FBVyxHQUFJLEdBQ3BDLENBQ2pCLENBQUE7UUFFRCxNQUFNLENBQUMsY0FBTSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLGlCQUFpQixFQUFFLENBQUE7UUFDekQsTUFBTSxDQUFDLGNBQU0sQ0FBQyxTQUFTLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxpQkFBaUIsRUFBRSxDQUFBO1FBQzVELE1BQU0sQ0FBQyxjQUFNLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsaUJBQWlCLEVBQUUs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Z0IsRUFBRSxDQUFBO0lBQ3hDLENBQUMsQ0FBQyxDQUFBO0FBQ0osQ0FBQyxDQUFDLENBQUEiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL2VyaWNoYW1pbHQwbi9yZXBvcy9sb2RnZTJhL2wyYS1tb2JpbGUtYXBwL3NyYy9jb21wb25lbnRzL05hdmlnYXRpb24udGVzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVuZGVyLCBzY3JlZW4sIGZpcmVFdmVudCB9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QnXG5pbXBvcnQgeyBCcm93c2VyUm91dGVyLCBNZW1vcnlSb3V0ZXIgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJ1xuaW1wb3J0IE5hdmlnYXRpb24gZnJvbSAnLi9OYXZpZ2F0aW9uJ1xuaW1wb3J0IHsgTW9iaWxlTWVudUJ1dHRvbiB9IGZyb20gJy4vTmF2aWdhdGlvbidcblxuLy8gTW9jayB1c2VOYXZpZ2F0ZVxuY29uc3QgbW9ja05hdmlnYXRlID0gamVzdC5mbigpXG5qZXN0Lm1vY2soJ3JlYWN0LXJvdXRlci1kb20nLCAoKSA9PiAoe1xuICAuLi5qZXN0LnJlcXVpcmVBY3R1YWwoJ3JlYWN0LXJvdXRlci1kb20nKSxcbiAgdXNlTmF2aWdhdGU6ICgpID0+IG1vY2tOYXZpZ2F0ZSxcbn0pKVxuXG5kZXNjcmliZSgnTmF2aWdhdGlvbicsICgpID0+IHtcbiAgY29uc3QgbW9ja09uQ2xvc2UgPSBqZXN0LmZuKClcblxuICBiZWZvcmVFYWNoKCgpID0+IHtcbiAgICBqZXN0LmNsZWFyQWxsTW9ja3MoKVxuICB9KVxuXG4gIGl0KCdyZW5kZXJzIG5hdmlnYXRpb24gaXRlbXMnLCAoKSA9PiB7XG4gICAgcmVuZGVyKFxuICAgICAgPEJyb3dzZXJSb3V0ZXI+XG4gICAgICAgIDxOYXZpZ2F0aW9uIGlzT3Blbj17dHJ1ZX0gb25DbG9zZT17bW9ja09uQ2xvc2V9IC8+XG4gICAgICA8L0Jyb3dzZXJSb3V0ZXI+XG4gICAgKVxuXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ0Rhc2hib2FyZCcpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ1Jlc2VydmF0aW9ucycpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ0V2ZW50cycpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ1N0YXRzJykpLnRvQmVJblRoZURvY3VtZW50KClcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnUHJvIFNob3AnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdTZXR0aW5ncycpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gIH0pXG5cbiAgaXQoJ2NhbGxzIG9uQ2xvc2Ugd2hlbiBjbGlja2luZyBvdmVybGF5JywgKCkgPT4ge1xuICAgIHJlbmRlcihcbiAgICAgIDxCcm93c2VyUm91dGVyPlxuICAgICAgICA8TmF2aWdhdGlvbiBpc09wZW49e3RydWV9IG9uQ2xvc2U9e21vY2tPbkNsb3NlfSAvPlxuICAgICAgPC9Ccm93c2VyUm91dGVyPlxuICAgIClcblxuICAgIGNvbnN0IG92ZXJsYXkgPSBzY3JlZW4uZ2V0QnlUZXN0SWQoJ25hdmlnYXRpb24tb3ZlcmxheScpXG4gICAgZmlyZUV2ZW50LmNsaWNrKG92ZXJsYXkpXG4gICAgZXhwZWN0KG1vY2tPbkNsb3NlKS50b0hhdmVCZWVuQ2FsbGVkKClcbiAgfSlcblxuICBpdCgnY2FsbHMgb25DbG9zZSB3aGVuIGNsaWNraW5nIGEgbmF2aWdhdGlvbiBpdGVtJywgKCkgPT4ge1xuICAgIHJlbmRlcihcbiAgICAgIDxCcm93c2VyUm91dGVyPlxuICAgICAgICA8TmF2aWdhdGlvbiBpc09wZW49e3RydWV9IG9uQ2xvc2U9e21vY2tPbkNsb3NlfSAvPlxuICAgICAgPC9Ccm93c2VyUm91dGVyPlxuICAgIClcblxuICAgIGZpcmVFdmVudC5jbGljayhzY3JlZW4uZ2V0QnlUZXh0KCdEYXNoYm9hcmQnKSlcbiAgICBleHBlY3QobW9ja09uQ2xvc2UpLnRvSGF2ZUJlZW5DYWxsZWQoKVxuICB9KVxuXG4gIGl0KCduYXZpZ2F0ZXMgdG8gaG9tZSBvbiBsb2dvdXQnLCAoKSA9PiB7XG4gICAgcmVuZGVyKFxuICAgICAgPEJyb3dzZXJSb3V0ZXI+XG4gICAgICAgIDxOYXZpZ2F0aW9uIGlzT3Blbj17dHJ1ZX0gb25DbG9zZT17bW9ja09uQ2xvc2V9IC8+XG4gICAgICA8L0Jyb3dzZXJSb3V0ZXI+XG4gICAgKVxuXG4gICAgZmlyZUV2ZW50LmNsaWNrKHNjcmVlbi5nZXRCeVRleHQoJ0xvZ291dCcpKVxuICAgIGV4cGVjdChtb2NrTmF2aWdhdGUpLnRvSGF2ZUJlZW5DYWxsZWRXaXRoKCcvJylcbiAgfSlcblxuICBpdCgnY2xvc2VzIG9uIG1vdXNlIGxlYXZlIGluIHRhYmxldCBtb2RlJywgKCkgPT4ge1xuICAgIHJlbmRlcihcbiAgICAgIDxCcm93c2VyUm91dGVyPlxuICAgICAgICA8TmF2aWdhdGlvbiBpc09wZW49e3RydWV9IG9uQ2xvc2U9e21vY2tPbkNsb3NlfSAvPlxuICAgICAgPC9Ccm93c2VyUm91dGVyPlxuICAgIClcblxuICAgIGNvbnN0IHNpZGViYXIgPSBzY3JlZW4uZ2V0QnlUZXN0SWQoJ25hdmlnYXRpb24tc2lkZWJhcicpXG4gICAgZmlyZUV2ZW50Lm1vdXNlTGVhdmUoc2lkZWJhcilcbiAgICBleHBlY3QobW9ja09uQ2xvc2UpLnRvSGF2ZUJlZW5DYWxsZWQoKVxuICB9KVxufSlcblxuZGVzY3JpYmUoJ01vYmlsZU1lbnVCdXR0b24nLCAoKSA9PiB7XG4gIGl0KCdyZW5kZXJzIGFuZCBoYW5kbGVzIGNsaWNrJywgKCkgPT4ge1xuICAgIGNvbnN0IG1vY2tPbkNsaWNrID0gamVzdC5mbigpXG4gICAgcmVuZGVyKDxNb2JpbGVNZW51QnV0dG9uIG9uQ2xpY2s9e21vY2tPbkNsaWNrfSAvPilcblxuICAgIGNvbnN0IGJ1dHRvbiA9IHNjcmVlbi5nZXRCeVJvbGUoJ2J1dHRvbicpXG4gICAgZmlyZUV2ZW50LmNsaWNrKGJ1dHRvbilcbiAgICBleHBlY3QobW9ja09uQ2xpY2spLnRvSGF2ZUJlZW5DYWxsZWQoKVxuICB9KVxufSlcbiJdLCJ2ZXJzaW9uIjozfQ==