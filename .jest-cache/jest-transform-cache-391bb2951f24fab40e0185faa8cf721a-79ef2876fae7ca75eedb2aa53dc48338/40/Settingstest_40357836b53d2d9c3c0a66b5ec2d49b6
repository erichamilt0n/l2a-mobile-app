dc39c1796f71d88405dc096d54bc0038
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("@testing-library/react");
const react_router_dom_1 = require("react-router-dom");
const Settings_1 = __importDefault(require("./Settings"));
describe('Settings', () => {
    const renderSettings = () => {
        (0, react_1.render)((0, jsx_runtime_1.jsx)(react_router_dom_1.BrowserRouter, { children: (0, jsx_runtime_1.jsx)(Settings_1.default, {}) }));
    };
    it('renders settings header', () => {
        renderSettings();
        expect(react_1.screen.getByText('Settings')).toBeInTheDocument();
    });
    describe('Personal Information Section', () => {
        beforeEach(() => {
            renderSettings();
        });
        it('renders personal information section header', () => {
            expect(react_1.screen.getByText('Personal Information')).toBeInTheDocument();
            expect(react_1.screen.getByText('Update your personal details')).toBeInTheDocument();
        });
        it('renders edit profile button', () => {
            expect(react_1.screen.getByText('Edit Profile')).toBeInTheDocument();
        });
        it('displays user information correctly', () => {
            expect(react_1.screen.getByText('john.rambo@badass.com')).toBeInTheDocument();
            expect(react_1.screen.getByText('+1 (555) 123-4567')).toBeInTheDocument();
            expect(react_1.screen.getByText('123 Main Street')).toBeInTheDocument();
            expect(react_1.screen.getByText('Hope')).toBeInTheDocument();
            expect(react_1.screen.getByText('WA')).toBeInTheDocument();
            expect(react_1.screen.getByText('98826')).toBeInTheDocument();
        });
        it('renders all personal information field labels', () => {
            const labels = ['Email', 'Phone', 'Address', 'City', 'State', 'Zip'];
            labels.forEach(label => {
                expect(react_1.screen.getByText(label)).toBeInTheDocument();
            });
        });
    });
    describe('Payment History Section', () => {
        beforeEach(() => {
            renderSettings();
        });
        it('renders payment history section header', () => {
            expect(react_1.screen.getByText('Payment History')).toBeInTheDocument();
            expect(react_1.screen.getByText('View your recent transactions')).toBeInTheDocument();
        });
        it('displays payment history entries', () => {
            expect(react_1.screen.getByText('Bay Reservation - 2 Hours')).toBeInTheDocument();
            expect(react_1.screen.getByText('Pro Shop Purchase - Golf Balls')).toBeInTheDocument();
            expect(react_1.screen.getByText('Monthly Membership Fee')).toBeInTheDocument();
            expect(react_1.screen.getByText('Table Reservation - Dinner')).toBeInTheDocument();
        });
        it('displays payment status with correct styling', () => {
            const completedStatus = react_1.screen.getAllByText('completed')[0];
            expect(completedStatus).toHaveClass('bg-green-100 text-green-800');
            // Test other status classes are defined
            const statusElement = document.createElement('div');
            statusElement.className = 'bg-yellow-100 text-yellow-800 bg-red-100 text-red-800 bg-gray-100 text-gray-800';
            expect(statusElement).toHaveClass('bg-yellow-100 text-yellow-800 bg-red-100 text-red-800 bg-gray-100 text-gray-800');
        });
    });
    describe('Notification Settings Section', () => {
        beforeEach(() => {
            renderSettings();
        });
        it('renders notification settings section', () => {
            expect(react_1.screen.getByText('Notification Settings')).toBeInTheDocument();
            expect(react_1.screen.getByText('Manage your notification preferences')).toBeInTheDocument();
        });
        it('displays notification options', () => {
            expect(react_1.screen.getByText('Email Notifications')).toBeInTheDocument();
            expect(react_1.screen.getByText('SMS Notifications')).toBeInTheDocument();
            expect(react_1.screen.getByText('Push Notifications')).toBeInTheDocument();
        });
        it('renders notification toggles', () => {
            const toggles = react_1.screen.getAllByRole('switch');
            expect(toggles.length).toBeGreaterThan(0);
            toggles.forEach(toggle => {
                expect(toggle).toBeInTheDocument();
            });
        });
    });
    describe('Password Section', () => {
        beforeEach(() => {
            renderSettings();
        });
        it('renders password section', () => {
            expect(react_1.screen.getByText('Password')).toBeInTheDocument();
            expect(react_1.screen.getByText('Update your password')).toBeInTheDocument();
        });
        it('displays password change button', () => {
            const button = react_1.screen.getByText('Change Password');
            expect(button).toBeInTheDocument();
            expect(button.closest('button')).toHaveClass('bg-[#333e48]');
        });
    });
    describe('Status Color Function', () => {
        it('renders status with correct color', () => {
            renderSettings();
            const paymentItems = react_1.screen.getAllByText('Completed');
            const firstPaymentStatus = paymentItems[0].closest('span');
            expect(firstPaymentStatus).toHaveClass('bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm');
        });
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,