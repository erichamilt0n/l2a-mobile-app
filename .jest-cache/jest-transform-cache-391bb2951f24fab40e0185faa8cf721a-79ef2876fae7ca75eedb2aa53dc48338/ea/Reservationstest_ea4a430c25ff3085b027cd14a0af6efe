8ed35f1efdb2d47e2becc4ac5d64152b
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
jest.mock('../components/icons', () => ({
    BayIcon: () => (0, jsx_runtime_1.jsx)("div", { "data-testid": "bay-icon", children: "Bay Icon" }),
    TableIcon: () => (0, jsx_runtime_1.jsx)("div", { "data-testid": "table-icon", children: "Table Icon" }),
}));
const react_1 = require("@testing-library/react");
const react_router_dom_1 = require("react-router-dom");
const Reservations_1 = __importDefault(require("./Reservations"));
describe('Reservations', () => {
    const renderReservations = () => {
        (0, react_1.render)((0, jsx_runtime_1.jsx)(react_router_dom_1.BrowserRouter, { children: (0, jsx_runtime_1.jsx)(Reservations_1.default, {}) }));
    };
    it('renders reservation page header', () => {
        renderReservations();
        expect(react_1.screen.getByText('Make a Reservation')).toBeInTheDocument();
        expect(react_1.screen.getByText('Book your bay or table')).toBeInTheDocument();
    });
    describe('Reservation Type Selection', () => {
        it('renders reservation type buttons', () => {
            renderReservations();
            expect(react_1.screen.getByText('Bay Reservation')).toBeInTheDocument();
            expect(react_1.screen.getByText('Table Reservation')).toBeInTheDocument();
            expect(react_1.screen.getByTestId('bay-icon')).toBeInTheDocument();
            expect(react_1.screen.getByTestId('table-icon')).toBeInTheDocument();
        });
    });
    describe('Date Selection', () => {
        it('renders date selection section', () => {
            renderReservations();
            expect(react_1.screen.getByText('Select Date')).toBeInTheDocument();
        });
        it('displays 7 date buttons', () => {
            renderReservations();
            const today = new Date();
            const dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
            // Get all date buttons
            const dateButtons = react_1.screen.getAllByRole('button').filter(button => {
                const text = button.textContent;
                return dayNames.some(day => text?.includes(day));
            });
            expect(dateButtons).toHaveLength(7);
            // Check if first date is today
            const todayShort = today.toLocaleDateString('en-US', { weekday: 'short' });
            const todayDate = today.getDate().toString();
            expect(dateButtons[0].textContent).toContain(todayShort);
            expect(dateButtons[0].textContent).toContain(todayDate);
        });
    });
    describe('Time Selection', () => {
        it('renders time selection section', () => {
            renderReservations();
            expect(react_1.screen.getByText('Select Time')).toBeInTheDocument();
        });
        it('displays all time slots', () => {
            renderReservations();
            expect(react_1.screen.getByText('9:00 AM')).toBeInTheDocument();
            expect(react_1.screen.getByText('10:00 AM')).toBeInTheDocument();
            expect(react_1.screen.getByText('11:00 AM')).toBeInTheDocument();
            expect(react_1.screen.getByText('12:00 PM')).toBeInTheDocument();
            expect(react_1.screen.getByText('1:00 PM')).toBeInTheDocument();
            expect(react_1.screen.getByText('2:00 PM')).toBeInTheDocument();
        });
        it('disables unavailable time slots', () => {
            renderReservations();
            const tenAMSlot = react_1.screen.getByText('10:00 AM').closest('button');
            const onePMSlot = react_1.screen.getByText('1:00 PM').closest('button');
            expect(tenAMSlot).toBeDisabled();
            expect(onePMSlot).toBeDisabled();
        });
        it('enables available time slots', () => {
            renderReservations();
            const nineAMSlot = react_1.screen.getByText('9:00 AM').closest('button');
            const elevenAMSlot = react_1.screen.getByText('11:00 AM').closest('button');
            const twoPMSlot = react_1.screen.getByText('2:00 PM').closest('button');
            expect(nineAMSlot).not.toBeDisabled();
            expect(elevenAMSlot).not.toBeDisabled();
            expect(twoPMSlot).not.toBeDisabled();
        });
    });
    describe('Guest Count Selection', () => {
        it('renders guest count section', () => {
            renderReservations();
            expect(react_1.screen.getByText('Number of Guests')).toBeInTheDocument();
            expect(react_1.screen.getByText('4')).toBeInTheDocument(); // Default guest count
        });
        it('renders increment and decrement buttons', () => {
            renderReservations();
            const buttons = react_1.screen.getAllByRole('button');
            const decrementButton = buttons.find(button => button.innerHTML.includes('M20 12H4'));
            const incrementButton = buttons.find(button => button.innerHTML.includes('M12 4v16m8-8H4'));
            expect(decrementButton).toBeInTheDocument();
            expect(incrementButton).toBeInTheDocument();
        });
    });
    it('renders complete reservation button', () => {
        renderReservations();
        const completeButton = react_1.screen.getByText('Complete Reservation');
        expect(completeButton).toBeInTheDocument();
        expect(completeButton.closest('button')).toHaveClass('p-4', 'md:p-6', 'rounded-xl', 'transition-colors', 'bg-[#2d3339]', 'hover:bg-[#3a424a]', 'text-white', 'w-full');
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,