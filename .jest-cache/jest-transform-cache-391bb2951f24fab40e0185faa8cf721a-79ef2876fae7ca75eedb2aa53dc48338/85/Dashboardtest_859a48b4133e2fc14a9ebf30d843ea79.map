{"file":"/Users/erichamilt0n/repos/lodge2a/l2a-mobile-app/src/pages/Dashboard.test.tsx","mappings":"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","names":[],"sources":["/Users/erichamilt0n/repos/lodge2a/l2a-mobile-app/src/pages/Dashboard.test.tsx"],"sourcesContent":["import React from 'react'\nimport { render, screen, fireEvent, within } from '@testing-library/react'\nimport { BrowserRouter } from 'react-router-dom'\nimport Dashboard from './Dashboard'\n\n// Mock useNavigate\nconst mockNavigate = jest.fn()\njest.mock('react-router-dom', () => ({\n  ...jest.requireActual('react-router-dom'),\n  useNavigate: () => mockNavigate,\n}))\n\ndescribe('Dashboard', () => {\n  beforeEach(() => {\n    mockNavigate.mockClear()\n  })\n\n  it('renders the welcome message and description', () => {\n    render(\n      <BrowserRouter>\n        <Dashboard />\n      </BrowserRouter>\n    )\n\n    expect(screen.getByText('Welcome Back, John')).toBeInTheDocument()\n    expect(screen.getByText(\"Here's what's happening at Lodge2A\")).toBeInTheDocument()\n  })\n\n  it('renders all stat cards with correct information', () => {\n    render(\n      <BrowserRouter>\n        <Dashboard />\n      </BrowserRouter>\n    )\n\n    // Check stat card titles\n    expect(screen.getByText('Upcoming Reservations')).toBeInTheDocument()\n    expect(screen.getByText('Events This Week')).toBeInTheDocument()\n    expect(screen.getByText('Average Score')).toBeInTheDocument()\n    expect(screen.getByText('Pro Shop Points')).toBeInTheDocument()\n\n    // Check stat card values\n    expect(screen.getByText('3')).toBeInTheDocument()\n    expect(screen.getByText('5')).toBeInTheDocument()\n    expect(screen.getByText('82')).toBeInTheDocument()\n    expect(screen.getByText('1,250')).toBeInTheDocument()\n  })\n\n  it('navigates to correct pages when stat cards are clicked', () => {\n    render(\n      <BrowserRouter>\n        <Dashboard />\n      </BrowserRouter>\n    )\n\n    // Click each stat card and verify navigation\n    fireEvent.click(screen.getByText('Upcoming Reservations'))\n    expect(mockNavigate).toHaveBeenCalledWith('/reservations')\n\n    fireEvent.click(screen.getByText('Events This Week'))\n    expect(mockNavigate).toHaveBeenCalledWith('/events')\n\n    fireEvent.click(screen.getByText('Average Score'))\n    expect(mockNavigate).toHaveBeenCalledWith('/scores')\n\n    fireEvent.click(screen.getByText('Pro Shop Points'))\n    expect(mockNavigate).toHaveBeenCalledWith('/pro-shop')\n  })\n\n  it('renders recent activity section with correct information', () => {\n    render(\n      <BrowserRouter>\n        <Dashboard />\n      </BrowserRouter>\n    )\n\n    // Check section title\n    expect(screen.getByText('Recent Activity')).toBeInTheDocument()\n\n    // Check activity entries\n    const recentActivitySection = screen.getByText('Recent Activity').closest('div')?.parentElement\n    expect(recentActivitySection).toBeInTheDocument()\n    \n    // Check bay reservations within the recent activity section\n    expect(within(recentActivitySection!).getAllByText(/Bay Reservation/)).toHaveLength(3)\n    expect(within(recentActivitySection!).getAllByText(/2 hours - Bay/)).toHaveLength(3)\n    expect(within(recentActivitySection!).getByText('Dec 5, 2024')).toBeInTheDocument()\n    expect(within(recentActivitySection!).getByText('Dec 10, 2024')).toBeInTheDocument()\n    expect(within(recentActivitySection!).getByText('Dec 15, 2024')).toBeInTheDocument()\n  })\n\n  it('renders upcoming events section with correct information', () => {\n    render(\n      <BrowserRouter>\n        <Dashboard />\n      </BrowserRouter>\n    )\n\n    // Check section title\n    expect(screen.getByText('Upcoming Events')).toBeInTheDocument()\n\n    // Check event entries\n    const upcomingEventsSection = screen.getByText('Upcoming Events').closest('div')?.parentElement\n    expect(upcomingEventsSection).toBeInTheDocument()\n    \n    // Check tournament entries within the upcoming events section\n    within(upcomingEventsSection!).getAllByText(/Tournament/).forEach((element, index) => {\n      expect(element).toHaveTextContent(`Tournament ${index + 1}`)\n    })\n    expect(within(upcomingEventsSection!).getAllByText('18 holes - Singles')).toHaveLength(3)\n    expect(within(upcomingEventsSection!).getByText('Dec 10, 2024')).toBeInTheDocument()\n    expect(within(upcomingEventsSection!).getByText('Dec 20, 2024')).toBeInTheDocument()\n    expect(within(upcomingEventsSection!).getByText('Dec 30, 2024')).toBeInTheDocument()\n  })\n\n  it('navigates to events page when View All button is clicked', () => {\n    render(\n      <BrowserRouter>\n        <Dashboard />\n      </BrowserRouter>\n    )\n\n    const viewAllButtons = screen.getAllByText('View All')\n    expect(viewAllButtons).toHaveLength(2)\n\n    // Click the View All button in the Upcoming Events section\n    fireEvent.click(viewAllButtons[1])\n    expect(mockNavigate).toHaveBeenCalledWith('/events')\n  })\n})\n"],"version":3}