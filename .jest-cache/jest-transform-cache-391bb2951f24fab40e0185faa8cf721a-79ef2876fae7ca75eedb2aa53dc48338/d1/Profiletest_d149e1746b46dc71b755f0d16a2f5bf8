0911ae578af8d21bcba4eed0d28af403
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("@testing-library/react");
const react_router_dom_1 = require("react-router-dom");
const Profile_1 = __importDefault(require("./Profile"));
describe('Profile', () => {
    const renderProfile = () => {
        (0, react_1.render)((0, jsx_runtime_1.jsx)(react_router_dom_1.BrowserRouter, { children: (0, jsx_runtime_1.jsx)(Profile_1.default, {}) }));
    };
    it('renders profile information', () => {
        renderProfile();
        // Check for profile header
        expect(react_1.screen.getByText('Profile')).toBeInTheDocument();
        expect(react_1.screen.getByText('Manage your account and preferences')).toBeInTheDocument();
        // Check for user information
        expect(react_1.screen.getByText('JD')).toBeInTheDocument();
        expect(react_1.screen.getByText('John Doe')).toBeInTheDocument();
        expect(react_1.screen.getByText('john.doe@example.com')).toBeInTheDocument();
        expect(react_1.screen.getByText('Member since Dec 2024')).toBeInTheDocument();
    });
    it('renders stat cards with correct information', () => {
        renderProfile();
        // Check stat cards
        expect(react_1.screen.getByText('Total Spent')).toBeInTheDocument();
        expect(react_1.screen.getByText('$450.98')).toBeInTheDocument();
        expect(react_1.screen.getByText('Reservations')).toBeInTheDocument();
        expect(react_1.screen.getByText('12')).toBeInTheDocument();
        expect(react_1.screen.getByText('Events Attended')).toBeInTheDocument();
        expect(react_1.screen.getByText('5')).toBeInTheDocument();
        expect(react_1.screen.getByText('Pro Shop Points')).toBeInTheDocument();
        expect(react_1.screen.getByText('1,250')).toBeInTheDocument();
    });
    it('renders payment history section', () => {
        renderProfile();
        // Check payment history header
        expect(react_1.screen.getByText('Payment History')).toBeInTheDocument();
        expect(react_1.screen.getByText('View All')).toBeInTheDocument();
        // Check payment history entries
        expect(react_1.screen.getByText('Bay Reservation - 2 Hours')).toBeInTheDocument();
        expect(react_1.screen.getByText('$120.00')).toBeInTheDocument();
        expect(react_1.screen.getByText('Dec 15, 2024')).toBeInTheDocument();
        expect(react_1.screen.getByText('Pro Shop Purchase - Golf Balls')).toBeInTheDocument();
        expect(react_1.screen.getByText('$45.99')).toBeInTheDocument();
        expect(react_1.screen.getByText('Dec 10, 2024')).toBeInTheDocument();
        expect(react_1.screen.getByText('Monthly Membership Fee')).toBeInTheDocument();
        expect(react_1.screen.getByText('$199.99')).toBeInTheDocument();
        expect(react_1.screen.getByText('Dec 5, 2024')).toBeInTheDocument();
    });
    it('applies correct status color classes', () => {
        renderProfile();
        // All statuses in the mock data are 'completed', so we should find green status indicators
        const statusElements = react_1.screen.getAllByText('completed');
        statusElements.forEach(element => {
            expect(element).toHaveClass('bg-green-100', 'text-green-800');
        });
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2VyaWNoYW1pbHQwbi9yZXBvcy9sb2RnZTJhL2wyYS1tb2JpbGUtYXBwL3NyYy9wYWdlcy9Qcm9maWxlLnRlc3QudHN4IiwibWFwcGluZ3MiOiI7Ozs7OztBQUNBLGtEQUF1RDtBQUN2RCx1REFBZ0Q7QUFDaEQsd0RBQStCO0FBRS9CLFFBQVEsQ0FBQyxTQUFTLEVBQUUsR0FBRyxFQUFFO0lBQ3ZCLE1BQU0sYUFBYSxHQUFHLEdBQUcsRUFBRTtRQUN6QixJQUFBLGNBQU0sRUFDSix1QkFBQyxnQ0FBYSxjQUNaLHVCQUFDLGlCQUFPLEtBQUcsR0FDRyxDQUNqQixDQUFBO0lBQ0gsQ0FBQyxDQUFBO0lBRUQsRUFBRSxDQUFDLDZCQUE2QixFQUFFLEdBQUcsRUFBRTtRQUNyQyxhQUFhLEVBQUUsQ0FBQTtRQUVmLDJCQUEyQjtRQUMzQixNQUFNLENBQUMsY0FBTSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLGlCQUFpQixFQUFFLENBQUE7UUFDdkQsTUFBTSxDQUFDLGNBQU0sQ0FBQyxTQUFTLENBQUMscUNBQXFDLENBQUMsQ0FBQyxDQUFDLGlCQUFpQixFQUFFLENBQUE7UUFFbkYsNkJBQTZCO1FBQzdCLE1BQU0sQ0FBQyxjQUFNLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsaUJBQWlCLEVBQUUsQ0FBQTtRQUNsRCxNQUFNLENBQUMsY0FBTSxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLGlCQUFpQixFQUFFLENBQUE7UUFDeEQsTUFBTSxDQUFDLGNBQU0sQ0FBQyxTQUFTLENBQUMsc0JBQXNCLENBQUMsQ0FBQyxDQUFDLGlCQUFpQixFQUFFLENBQUE7UUFDcEUsTUFBTSxDQUFDLGNBQU0sQ0FBQyxTQUFTLENBQUMsdUJBQXVCLENBQUMsQ0FBQyxDQUFDLGlCQUFpQixFQUFFLENBQUE7SUFDdkUsQ0FBQyxDQUFDLENBQUE7SUFFRixFQUFFLENBQUMsNkNBQTZDLEVBQUUsR0FBRyxFQUFFO1FBQ3JELGFBQWEsRUFBRSxDQUFB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QUMsQ0FBQyxDQUFBO0FBQ0osQ0FBQyxDQUFDLENBQUEiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL2VyaWNoYW1pbHQwbi9yZXBvcy9sb2RnZTJhL2wyYS1tb2JpbGUtYXBwL3NyYy9wYWdlcy9Qcm9maWxlLnRlc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IHJlbmRlciwgc2NyZWVuIH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdCdcbmltcG9ydCB7IEJyb3dzZXJSb3V0ZXIgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJ1xuaW1wb3J0IFByb2ZpbGUgZnJvbSAnLi9Qcm9maWxlJ1xuXG5kZXNjcmliZSgnUHJvZmlsZScsICgpID0+IHtcbiAgY29uc3QgcmVuZGVyUHJvZmlsZSA9ICgpID0+IHtcbiAgICByZW5kZXIoXG4gICAgICA8QnJvd3NlclJvdXRlcj5cbiAgICAgICAgPFByb2ZpbGUgLz5cbiAgICAgIDwvQnJvd3NlclJvdXRlcj5cbiAgICApXG4gIH1cblxuICBpdCgncmVuZGVycyBwcm9maWxlIGluZm9ybWF0aW9uJywgKCkgPT4ge1xuICAgIHJlbmRlclByb2ZpbGUoKVxuICAgIFxuICAgIC8vIENoZWNrIGZvciBwcm9maWxlIGhlYWRlclxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdQcm9maWxlJykpLnRvQmVJblRoZURvY3VtZW50KClcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnTWFuYWdlIHlvdXIgYWNjb3VudCBhbmQgcHJlZmVyZW5jZXMnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICAgIFxuICAgIC8vIENoZWNrIGZvciB1c2VyIGluZm9ybWF0aW9uXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ0pEJykpLnRvQmVJblRoZURvY3VtZW50KClcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnSm9obiBEb2UnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdqb2huLmRvZUBleGFtcGxlLmNvbScpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ01lbWJlciBzaW5jZSBEZWMgMjAyNCcpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gIH0pXG5cbiAgaXQoJ3JlbmRlcnMgc3RhdCBjYXJkcyB3aXRoIGNvcnJlY3QgaW5mb3JtYXRpb24nLCAoKSA9PiB7XG4gICAgcmVuZGVyUHJvZmlsZSgpXG4gICAgXG4gICAgLy8gQ2hlY2sgc3RhdCBjYXJkc1xuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdUb3RhbCBTcGVudCcpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJyQ0NTAuOTgnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICAgIFxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdSZXNlcnZhdGlvbnMnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCcxMicpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ0V2ZW50cyBBdHRlbmRlZCcpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJzUnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICAgIFxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdQcm8gU2hvcCBQb2ludHMnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCcxLDI1MCcpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gIH0pXG5cbiAgaXQoJ3JlbmRlcnMgcGF5bWVudCBoaXN0b3J5IHNlY3Rpb24nLCAoKSA9PiB7XG4gICAgcmVuZGVyUHJvZmlsZSgpXG4gICAgXG4gICAgLy8gQ2hlY2sgcGF5bWVudCBoaXN0b3J5IGhlYWRlclxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdQYXltZW50IEhpc3RvcnknKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdWaWV3IEFsbCcpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgXG4gICAgLy8gQ2hlY2sgcGF5bWVudCBoaXN0b3J5IGVudHJpZXNcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnQmF5IFJlc2VydmF0aW9uIC0gMiBIb3VycycpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJyQxMjAuMDAnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdEZWMgMTUsIDIwMjQnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICAgIFxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdQcm8gU2hvcCBQdXJjaGFzZSAtIEdvbGYgQmFsbHMnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCckNDUuOTknKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdEZWMgMTAsIDIwMjQnKSkudG9CZUluVGhlRG9jdW1lbnQoKVxuICAgIFxuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdNb250aGx5IE1lbWJlcnNoaXAgRmVlJykpLnRvQmVJblRoZURvY3VtZW50KClcbiAgICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnJDE5OS45OScpKS50b0JlSW5UaGVEb2N1bWVudCgpXG4gICAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ0RlYyA1LCAyMDI0JykpLnRvQmVJblRoZURvY3VtZW50KClcbiAgfSlcblxuICBpdCgnYXBwbGllcyBjb3JyZWN0IHN0YXR1cyBjb2xvciBjbGFzc2VzJywgKCkgPT4ge1xuICAgIHJlbmRlclByb2ZpbGUoKVxuICAgIFxuICAgIC8vIEFsbCBzdGF0dXNlcyBpbiB0aGUgbW9jayBkYXRhIGFyZSAnY29tcGxldGVkJywgc28gd2Ugc2hvdWxkIGZpbmQgZ3JlZW4gc3RhdHVzIGluZGljYXRvcnNcbiAgICBjb25zdCBzdGF0dXNFbGVtZW50cyA9IHNjcmVlbi5nZXRBbGxCeVRleHQoJ2NvbXBsZXRlZCcpXG4gICAgc3RhdHVzRWxlbWVudHMuZm9yRWFjaChlbGVtZW50ID0+IHtcbiAgICAgIGV4cGVjdChlbGVtZW50KS50b0hhdmVDbGFzcygnYmctZ3JlZW4tMTAwJywgJ3RleHQtZ3JlZW4tODAwJylcbiAgICB9KVxuICB9KVxufSlcbiJdLCJ2ZXJzaW9uIjozfQ==