60bc7b006823f4d0af099884df54c41f
"use strict";

/* istanbul ignore next */
function cov_5wlifjyr9() {
  var path = "/Users/erichamilt0n/repos/lodge2a/l2a-mobile-app/src/components/Calendar.tsx";
  var hash = "f66ba44401761f1bc0af5d936db055252d7a6b37";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/erichamilt0n/repos/lodge2a/l2a-mobile-app/src/components/Calendar.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 22
        },
        end: {
          line: 3,
          column: 50
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 6,
          column: 44
        },
        end: {
          line: 6,
          column: 90
        }
      },
      "4": {
        start: {
          line: 7,
          column: 42
        },
        end: {
          line: 7,
          column: 91
        }
      },
      "5": {
        start: {
          line: 8,
          column: 19
        },
        end: {
          line: 21,
          column: 5
        }
      },
      "6": {
        start: {
          line: 22,
          column: 24
        },
        end: {
          line: 22,
          column: 76
        }
      },
      "7": {
        start: {
          line: 23,
          column: 28
        },
        end: {
          line: 23,
          column: 75
        }
      },
      "8": {
        start: {
          line: 24,
          column: 33
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "9": {
        start: {
          line: 25,
          column: 21
        },
        end: {
          line: 25,
          column: 23
        }
      },
      "10": {
        start: {
          line: 26,
          column: 34
        },
        end: {
          line: 26,
          column: 82
        }
      },
      "11": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "12": {
        start: {
          line: 28,
          column: 21
        },
        end: {
          line: 28,
          column: 40
        }
      },
      "13": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 33,
          column: 15
        }
      },
      "14": {
        start: {
          line: 36,
          column: 22
        },
        end: {
          line: 36,
          column: 32
        }
      },
      "15": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "16": {
        start: {
          line: 37,
          column: 21
        },
        end: {
          line: 37,
          column: 22
        }
      },
      "17": {
        start: {
          line: 38,
          column: 25
        },
        end: {
          line: 38,
          column: 63
        }
      },
      "18": {
        start: {
          line: 39,
          column: 31
        },
        end: {
          line: 39,
          column: 89
        }
      },
      "19": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 50,
          column: 15
        }
      },
      "20": {
        start: {
          line: 53,
          column: 30
        },
        end: {
          line: 53,
          column: 46
        }
      },
      "21": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "22": {
        start: {
          line: 54,
          column: 21
        },
        end: {
          line: 54,
          column: 22
        }
      },
      "23": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 59,
          column: 15
        }
      },
      "24": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 20
        }
      },
      "25": {
        start: {
          line: 63,
          column: 32
        },
        end: {
          line: 71,
          column: 5
        }
      },
      "26": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "27": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 32
        }
      },
      "28": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 44
        }
      },
      "29": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 46
        }
      },
      "30": {
        start: {
          line: 72,
          column: 28
        },
        end: {
          line: 80,
          column: 5
        }
      },
      "31": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "32": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 31
        }
      },
      "33": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 44
        }
      },
      "34": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 46
        }
      },
      "35": {
        start: {
          line: 81,
          column: 28
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "36": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 83,
          column: 19
        }
      },
      "37": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 19
        }
      },
      "38": {
        start: {
          line: 84,
          column: 29
        },
        end: {
          line: 84,
          column: 69
        }
      },
      "39": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 86,
          column: 19
        }
      },
      "40": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 19
        }
      },
      "41": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 88,
          column: 19
        }
      },
      "42": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 19
        }
      },
      "43": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 37
        }
      },
      "44": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 107,
          column: 53
        }
      },
      "45": {
        start: {
          line: 92,
          column: 36
        },
        end: {
          line: 92,
          column: 78
        }
      },
      "46": {
        start: {
          line: 93,
          column: 163
        },
        end: {
          line: 93,
          column: 262
        }
      },
      "47": {
        start: {
          line: 94,
          column: 36
        },
        end: {
          line: 94,
          column: 77
        }
      },
      "48": {
        start: {
          line: 95,
          column: 169
        },
        end: {
          line: 95,
          column: 188
        }
      },
      "49": {
        start: {
          line: 95,
          column: 203
        },
        end: {
          line: 95,
          column: 299
        }
      },
      "50": {
        start: {
          line: 95,
          column: 885
        },
        end: {
          line: 95,
          column: 991
        }
      },
      "51": {
        start: {
          line: 95,
          column: 1121
        },
        end: {
          line: 107,
          column: 42
        }
      },
      "52": {
        start: {
          line: 96,
          column: 24
        },
        end: {
          line: 96,
          column: 69
        }
      },
      "53": {
        start: {
          line: 109,
          column: 0
        },
        end: {
          line: 109,
          column: 27
        }
      }
    },
    fnMap: {
      "0": {
        name: "Calendar",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 17
          }
        },
        loc: {
          start: {
            line: 5,
            column: 82
          },
          end: {
            line: 108,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 24,
            column: 33
          },
          end: {
            line: 24,
            column: 34
          }
        },
        loc: {
          start: {
            line: 24,
            column: 39
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 63,
            column: 32
          },
          end: {
            line: 63,
            column: 33
          }
        },
        loc: {
          start: {
            line: 63,
            column: 38
          },
          end: {
            line: 71,
            column: 5
          }
        },
        line: 63
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 72,
            column: 28
          },
          end: {
            line: 72,
            column: 29
          }
        },
        loc: {
          start: {
            line: 72,
            column: 34
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 72
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 81,
            column: 28
          },
          end: {
            line: 81,
            column: 29
          }
        },
        loc: {
          start: {
            line: 81,
            column: 53
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 81
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 91,
            column: 783
          },
          end: {
            line: 91,
            column: 784
          }
        },
        loc: {
          start: {
            line: 91,
            column: 788
          },
          end: {
            line: 93,
            column: 33
          }
        },
        line: 91
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 93,
            column: 144
          },
          end: {
            line: 93,
            column: 145
          }
        },
        loc: {
          start: {
            line: 93,
            column: 163
          },
          end: {
            line: 93,
            column: 262
          }
        },
        line: 93
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 93,
            column: 334
          },
          end: {
            line: 93,
            column: 335
          }
        },
        loc: {
          start: {
            line: 93,
            column: 339
          },
          end: {
            line: 95,
            column: 33
          }
        },
        line: 93
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 95,
            column: 159
          },
          end: {
            line: 95,
            column: 160
          }
        },
        loc: {
          start: {
            line: 95,
            column: 169
          },
          end: {
            line: 95,
            column: 188
          }
        },
        line: 95
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 95,
            column: 194
          },
          end: {
            line: 95,
            column: 195
          }
        },
        loc: {
          start: {
            line: 95,
            column: 203
          },
          end: {
            line: 95,
            column: 299
          }
        },
        line: 95
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 95,
            column: 877
          },
          end: {
            line: 95,
            column: 878
          }
        },
        loc: {
          start: {
            line: 95,
            column: 885
          },
          end: {
            line: 95,
            column: 991
          }
        },
        line: 95
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 95,
            column: 1104
          },
          end: {
            line: 95,
            column: 1105
          }
        },
        loc: {
          start: {
            line: 95,
            column: 1121
          },
          end: {
            line: 107,
            column: 42
          }
        },
        line: 95
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 95,
            column: 1165
          },
          end: {
            line: 95,
            column: 1166
          }
        },
        loc: {
          start: {
            line: 95,
            column: 1171
          },
          end: {
            line: 97,
            column: 21
          }
        },
        line: 95
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 59
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 5,
            column: 49
          },
          end: {
            line: 5,
            column: 59
          }
        }],
        line: 5
      },
      "1": {
        loc: {
          start: {
            line: 39,
            column: 31
          },
          end: {
            line: 39,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 32
          },
          end: {
            line: 39,
            column: 39
          }
        }, {
          start: {
            line: 39,
            column: 43
          },
          end: {
            line: 39,
            column: 57
          }
        }, {
          start: {
            line: 39,
            column: 63
          },
          end: {
            line: 39,
            column: 70
          }
        }, {
          start: {
            line: 39,
            column: 74
          },
          end: {
            line: 39,
            column: 88
          }
        }],
        line: 39
      },
      "2": {
        loc: {
          start: {
            line: 43,
            column: 25
          },
          end: {
            line: 45,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 25
          },
          end: {
            line: 43,
            column: 46
          }
        }, {
          start: {
            line: 44,
            column: 20
          },
          end: {
            line: 44,
            column: 53
          }
        }, {
          start: {
            line: 45,
            column: 20
          },
          end: {
            line: 45,
            column: 55
          }
        }],
        line: 43
      },
      "3": {
        loc: {
          start: {
            line: 46,
            column: 28
          },
          end: {
            line: 48,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 28
          },
          end: {
            line: 46,
            column: 56
          }
        }, {
          start: {
            line: 47,
            column: 20
          },
          end: {
            line: 47,
            column: 60
          }
        }, {
          start: {
            line: 48,
            column: 20
          },
          end: {
            line: 48,
            column: 62
          }
        }],
        line: 46
      },
      "4": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: 68,
            column: 13
          },
          end: {
            line: 70,
            column: 9
          }
        }],
        line: 64
      },
      "5": {
        loc: {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: 77,
            column: 13
          },
          end: {
            line: 79,
            column: 9
          }
        }],
        line: 73
      },
      "6": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 83,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 83,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "7": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 86,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 86,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "8": {
        loc: {
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 85,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 85,
            column: 19
          }
        }, {
          start: {
            line: 85,
            column: 23
          },
          end: {
            line: 85,
            column: 45
          }
        }],
        line: 85
      },
      "9": {
        loc: {
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 88,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 88,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "10": {
        loc: {
          start: {
            line: 87,
            column: 12
          },
          end: {
            line: 87,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 12
          },
          end: {
            line: 87,
            column: 19
          }
        }, {
          start: {
            line: 87,
            column: 23
          },
          end: {
            line: 87,
            column: 45
          }
        }],
        line: 87
      },
      "11": {
        loc: {
          start: {
            line: 97,
            column: 33
          },
          end: {
            line: 97,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 33
          },
          end: {
            line: 97,
            column: 47
          }
        }, {
          start: {
            line: 97,
            column: 51
          },
          end: {
            line: 97,
            column: 70
          }
        }],
        line: 97
      },
      "12": {
        loc: {
          start: {
            line: 99,
            column: 16
          },
          end: {
            line: 105,
            column: 41
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 100,
            column: 26
          },
          end: {
            line: 104,
            column: 64
          }
        }, {
          start: {
            line: 105,
            column: 26
          },
          end: {
            line: 105,
            column: 41
          }
        }],
        line: 99
      },
      "13": {
        loc: {
          start: {
            line: 100,
            column: 26
          },
          end: {
            line: 104,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 101,
            column: 30
          },
          end: {
            line: 101,
            column: 55
          }
        }, {
          start: {
            line: 102,
            column: 30
          },
          end: {
            line: 104,
            column: 64
          }
        }],
        line: 100
      },
      "14": {
        loc: {
          start: {
            line: 102,
            column: 30
          },
          end: {
            line: 104,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 103,
            column: 34
          },
          end: {
            line: 103,
            column: 59
          }
        }, {
          start: {
            line: 104,
            column: 34
          },
          end: {
            line: 104,
            column: 64
          }
        }],
        line: 102
      },
      "15": {
        loc: {
          start: {
            line: 106,
            column: 16
          },
          end: {
            line: 106,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 106,
            column: 56
          },
          end: {
            line: 106,
            column: 87
          }
        }, {
          start: {
            line: 106,
            column: 90
          },
          end: {
            line: 106,
            column: 106
          }
        }],
        line: 106
      },
      "16": {
        loc: {
          start: {
            line: 106,
            column: 16
          },
          end: {
            line: 106,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 16
          },
          end: {
            line: 106,
            column: 30
          }
        }, {
          start: {
            line: 106,
            column: 34
          },
          end: {
            line: 106,
            column: 53
          }
        }],
        line: 106
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0],
      "1": [0, 0, 0, 0],
      "2": [0, 0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/erichamilt0n/repos/lodge2a/l2a-mobile-app/src/components/Calendar.tsx",
      mappings: "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",
      names: [],
      sources: ["/Users/erichamilt0n/repos/lodge2a/l2a-mobile-app/src/components/Calendar.tsx"],
      sourcesContent: ["import { useState } from 'react'\n\ninterface CalendarProps {\n  onDateSelect?: (date: Date) => void\n  selectedDate?: Date\n  minDate?: Date\n  maxDate?: Date\n}\n\nexport default function Calendar({\n  onDateSelect,\n  selectedDate = new Date(),\n  minDate,\n  maxDate,\n}: CalendarProps) {\n  const [currentMonth, setCurrentMonth] = useState(selectedDate.getMonth())\n  const [currentYear, setCurrentYear] = useState(selectedDate.getFullYear())\n\n  const months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ]\n\n  const daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate()\n  const firstDayOfMonth = new Date(currentYear, currentMonth, 1).getDay()\n\n  const generateCalendarDays = () => {\n    const days = []\n    const previousMonthDays = new Date(currentYear, currentMonth, 0).getDate()\n\n    // Previous month days\n    for (let i = firstDayOfMonth - 1; i >= 0; i--) {\n      days.push({\n        day: previousMonthDays - i,\n        isCurrentMonth: false,\n        isPast: true,\n      })\n    }\n\n    // Current month days\n    const today = new Date()\n    for (let i = 1; i <= daysInMonth; i++) {\n      const date = new Date(currentYear, currentMonth, i)\n      const isDisabled = (minDate && date < minDate) || (maxDate && date > maxDate)\n\n      days.push({\n        day: i,\n        isCurrentMonth: true,\n        isToday:\n          i === today.getDate() &&\n          currentMonth === today.getMonth() &&\n          currentYear === today.getFullYear(),\n        isSelected:\n          i === selectedDate.getDate() &&\n          currentMonth === selectedDate.getMonth() &&\n          currentYear === selectedDate.getFullYear(),\n        isDisabled,\n      })\n    }\n\n    // Next month days\n    const remainingDays = 42 - days.length // 6 rows * 7 days = 42\n    for (let i = 1; i <= remainingDays; i++) {\n      days.push({\n        day: i,\n        isCurrentMonth: false,\n        isFuture: true,\n      })\n    }\n\n    return days\n  }\n\n  const handlePreviousMonth = () => {\n    if (currentMonth === 0) {\n      setCurrentMonth(11)\n      setCurrentYear(currentYear - 1)\n    } else {\n      setCurrentMonth(currentMonth - 1)\n    }\n  }\n\n  const handleNextMonth = () => {\n    if (currentMonth === 11) {\n      setCurrentMonth(0)\n      setCurrentYear(currentYear + 1)\n    } else {\n      setCurrentMonth(currentMonth + 1)\n    }\n  }\n\n  const handleDateClick = (day: number, isCurrentMonth: boolean) => {\n    if (!isCurrentMonth) return\n\n    const selectedDate = new Date(currentYear, currentMonth, day)\n    if (minDate && selectedDate < minDate) return\n    if (maxDate && selectedDate > maxDate) return\n\n    onDateSelect?.(selectedDate)\n  }\n\n  return (\n    <div className=\"bg-dark-100 rounded-2xl p-6\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <button\n          onClick={handlePreviousMonth}\n          className=\"p-2 hover:bg-dark-200 rounded-xl text-white transition-colors\"\n          aria-label=\"previous-month\"\n        >\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M15 19l-7-7 7-7\"\n            />\n          </svg>\n        </button>\n        <div className=\"flex items-center space-x-2\">\n          <select\n            value={currentMonth}\n            onChange={e => {\n              setCurrentMonth(parseInt(e.target.value))\n            }}\n            className=\"bg-dark-200 text-black px-3 py-1 rounded-xl\"\n            aria-label=\"select-month\"\n          >\n            {months.map((month, index) => (\n              <option key={month} value={index} className=\"text-black\">\n                {month}\n              </option>\n            ))}\n          </select>\n          <select\n            value={currentYear}\n            onChange={e => {\n              setCurrentYear(parseInt(e.target.value))\n            }}\n            className=\"bg-dark-200 text-black px-3 py-1 rounded-xl\"\n            aria-label=\"select-year\"\n          >\n            {Array.from({ length: 10 }, (_, i) => currentYear - 5 + i).map(year => (\n              <option key={year} value={year} className=\"text-black\">\n                {year}\n              </option>\n            ))}\n          </select>\n        </div>\n        <button\n          onClick={handleNextMonth}\n          className=\"p-2 hover:bg-dark-200 rounded-xl text-white transition-colors\"\n          aria-label=\"next-month\"\n        >\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </button>\n      </div>\n\n      <div className=\"grid grid-cols-7 gap-1 mb-2\">\n        {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => (\n          <div key={day} className=\"text-center text-gray-400 text-sm py-2\">\n            {day}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"grid grid-cols-7 gap-1\">\n        {generateCalendarDays().map((day, index) => (\n          <button\n            key={index}\n            onClick={() => {\n              handleDateClick(day.day, day.isCurrentMonth)\n            }}\n            disabled={day.isDisabled || !day.isCurrentMonth}\n            className={`\n              p-2 rounded-xl text-center transition-colors\n              ${\n                day.isCurrentMonth\n                  ? day.isToday\n                    ? 'bg-[#333e48] text-white'\n                    : day.isSelected\n                      ? 'bg-[#333e48] text-white'\n                      : 'text-white hover:bg-dark-200'\n                  : 'text-gray-600'\n              }\n              ${day.isDisabled || !day.isCurrentMonth ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}\n            `}\n          >\n            {day.day}\n          </button>\n        ))}\n      </div>\n    </div>\n  )\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f66ba44401761f1bc0af5d936db055252d7a6b37"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_5wlifjyr9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_5wlifjyr9();
cov_5wlifjyr9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_5wlifjyr9().s[1]++, require("react/jsx-runtime"));
const react_1 =
/* istanbul ignore next */
(cov_5wlifjyr9().s[2]++, require("react"));
function Calendar({
  onDateSelect,
  selectedDate =
  /* istanbul ignore next */
  (cov_5wlifjyr9().b[0][0]++, new Date()),
  minDate,
  maxDate
}) {
  /* istanbul ignore next */
  cov_5wlifjyr9().f[0]++;
  const [currentMonth, setCurrentMonth] =
  /* istanbul ignore next */
  (cov_5wlifjyr9().s[3]++, (0, react_1.useState)(selectedDate.getMonth()));
  const [currentYear, setCurrentYear] =
  /* istanbul ignore next */
  (cov_5wlifjyr9().s[4]++, (0, react_1.useState)(selectedDate.getFullYear()));
  const months =
  /* istanbul ignore next */
  (cov_5wlifjyr9().s[5]++, ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']);
  const daysInMonth =
  /* istanbul ignore next */
  (cov_5wlifjyr9().s[6]++, new Date(currentYear, currentMonth + 1, 0).getDate());
  const firstDayOfMonth =
  /* istanbul ignore next */
  (cov_5wlifjyr9().s[7]++, new Date(currentYear, currentMonth, 1).getDay());
  /* istanbul ignore next */
  cov_5wlifjyr9().s[8]++;
  const generateCalendarDays = () => {
    /* istanbul ignore next */
    cov_5wlifjyr9().f[1]++;
    const days =
    /* istanbul ignore next */
    (cov_5wlifjyr9().s[9]++, []);
    const previousMonthDays =
    /* istanbul ignore next */
    (cov_5wlifjyr9().s[10]++, new Date(currentYear, currentMonth, 0).getDate());
    // Previous month days
    /* istanbul ignore next */
    cov_5wlifjyr9().s[11]++;
    for (let i =
    /* istanbul ignore next */
    (cov_5wlifjyr9().s[12]++, firstDayOfMonth - 1); i >= 0; i--) {
      /* istanbul ignore next */
      cov_5wlifjyr9().s[13]++;
      days.push({
        day: previousMonthDays - i,
        isCurrentMonth: false,
        isPast: true
      });
    }
    // Current month days
    const today =
    /* istanbul ignore next */
    (cov_5wlifjyr9().s[14]++, new Date());
    /* istanbul ignore next */
    cov_5wlifjyr9().s[15]++;
    for (let i =
    /* istanbul ignore next */
    (cov_5wlifjyr9().s[16]++, 1); i <= daysInMonth; i++) {
      const date =
      /* istanbul ignore next */
      (cov_5wlifjyr9().s[17]++, new Date(currentYear, currentMonth, i));
      const isDisabled =
      /* istanbul ignore next */
      (cov_5wlifjyr9().s[18]++,
      /* istanbul ignore next */
      (cov_5wlifjyr9().b[1][0]++, minDate) &&
      /* istanbul ignore next */
      (cov_5wlifjyr9().b[1][1]++, date < minDate) ||
      /* istanbul ignore next */
      (cov_5wlifjyr9().b[1][2]++, maxDate) &&
      /* istanbul ignore next */
      (cov_5wlifjyr9().b[1][3]++, date > maxDate));
      /* istanbul ignore next */
      cov_5wlifjyr9().s[19]++;
      days.push({
        day: i,
        isCurrentMonth: true,
        isToday:
        /* istanbul ignore next */
        (cov_5wlifjyr9().b[2][0]++, i === today.getDate()) &&
        /* istanbul ignore next */
        (cov_5wlifjyr9().b[2][1]++, currentMonth === today.getMonth()) &&
        /* istanbul ignore next */
        (cov_5wlifjyr9().b[2][2]++, currentYear === today.getFullYear()),
        isSelected:
        /* istanbul ignore next */
        (cov_5wlifjyr9().b[3][0]++, i === selectedDate.getDate()) &&
        /* istanbul ignore next */
        (cov_5wlifjyr9().b[3][1]++, currentMonth === selectedDate.getMonth()) &&
        /* istanbul ignore next */
        (cov_5wlifjyr9().b[3][2]++, currentYear === selectedDate.getFullYear()),
        isDisabled
      });
    }
    // Next month days
    const remainingDays =
    /* istanbul ignore next */
    (cov_5wlifjyr9().s[20]++, 42 - days.length); // 6 rows * 7 days = 42
    /* istanbul ignore next */
    cov_5wlifjyr9().s[21]++;
    for (let i =
    /* istanbul ignore next */
    (cov_5wlifjyr9().s[22]++, 1); i <= remainingDays; i++) {
      /* istanbul ignore next */
      cov_5wlifjyr9().s[23]++;
      days.push({
        day: i,
        isCurrentMonth: false,
        isFuture: true
      });
    }
    /* istanbul ignore next */
    cov_5wlifjyr9().s[24]++;
    return days;
  };
  /* istanbul ignore next */
  cov_5wlifjyr9().s[25]++;
  const handlePreviousMonth = () => {
    /* istanbul ignore next */
    cov_5wlifjyr9().f[2]++;
    cov_5wlifjyr9().s[26]++;
    if (currentMonth === 0) {
      /* istanbul ignore next */
      cov_5wlifjyr9().b[4][0]++;
      cov_5wlifjyr9().s[27]++;
      setCurrentMonth(11);
      /* istanbul ignore next */
      cov_5wlifjyr9().s[28]++;
      setCurrentYear(currentYear - 1);
    } else {
      /* istanbul ignore next */
      cov_5wlifjyr9().b[4][1]++;
      cov_5wlifjyr9().s[29]++;
      setCurrentMonth(currentMonth - 1);
    }
  };
  /* istanbul ignore next */
  cov_5wlifjyr9().s[30]++;
  const handleNextMonth = () => {
    /* istanbul ignore next */
    cov_5wlifjyr9().f[3]++;
    cov_5wlifjyr9().s[31]++;
    if (currentMonth === 11) {
      /* istanbul ignore next */
      cov_5wlifjyr9().b[5][0]++;
      cov_5wlifjyr9().s[32]++;
      setCurrentMonth(0);
      /* istanbul ignore next */
      cov_5wlifjyr9().s[33]++;
      setCurrentYear(currentYear + 1);
    } else {
      /* istanbul ignore next */
      cov_5wlifjyr9().b[5][1]++;
      cov_5wlifjyr9().s[34]++;
      setCurrentMonth(currentMonth + 1);
    }
  };
  /* istanbul ignore next */
  cov_5wlifjyr9().s[35]++;
  const handleDateClick = (day, isCurrentMonth) => {
    /* istanbul ignore next */
    cov_5wlifjyr9().f[4]++;
    cov_5wlifjyr9().s[36]++;
    if (!isCurrentMonth) {
      /* istanbul ignore next */
      cov_5wlifjyr9().b[6][0]++;
      cov_5wlifjyr9().s[37]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_5wlifjyr9().b[6][1]++;
    }
    const selectedDate =
    /* istanbul ignore next */
    (cov_5wlifjyr9().s[38]++, new Date(currentYear, currentMonth, day));
    /* istanbul ignore next */
    cov_5wlifjyr9().s[39]++;
    if (
    /* istanbul ignore next */
    (cov_5wlifjyr9().b[8][0]++, minDate) &&
    /* istanbul ignore next */
    (cov_5wlifjyr9().b[8][1]++, selectedDate < minDate)) {
      /* istanbul ignore next */
      cov_5wlifjyr9().b[7][0]++;
      cov_5wlifjyr9().s[40]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_5wlifjyr9().b[7][1]++;
    }
    cov_5wlifjyr9().s[41]++;
    if (
    /* istanbul ignore next */
    (cov_5wlifjyr9().b[10][0]++, maxDate) &&
    /* istanbul ignore next */
    (cov_5wlifjyr9().b[10][1]++, selectedDate > maxDate)) {
      /* istanbul ignore next */
      cov_5wlifjyr9().b[9][0]++;
      cov_5wlifjyr9().s[42]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_5wlifjyr9().b[9][1]++;
    }
    cov_5wlifjyr9().s[43]++;
    onDateSelect?.(selectedDate);
  };
  /* istanbul ignore next */
  cov_5wlifjyr9().s[44]++;
  return (0, jsx_runtime_1.jsxs)("div", {
    className: "bg-dark-100 rounded-2xl p-6",
    children: [(0, jsx_runtime_1.jsxs)("div", {
      className: "flex justify-between items-center mb-6",
      children: [(0, jsx_runtime_1.jsx)("button", {
        onClick: handlePreviousMonth,
        className: "p-2 hover:bg-dark-200 rounded-xl text-white transition-colors",
        "aria-label": "previous-month",
        children: (0, jsx_runtime_1.jsx)("svg", {
          className: "w-6 h-6",
          fill: "none",
          stroke: "currentColor",
          viewBox: "0 0 24 24",
          children: (0, jsx_runtime_1.jsx)("path", {
            strokeLinecap: "round",
            strokeLinejoin: "round",
            strokeWidth: 2,
            d: "M15 19l-7-7 7-7"
          })
        })
      }), (0, jsx_runtime_1.jsxs)("div", {
        className: "flex items-center space-x-2",
        children: [(0, jsx_runtime_1.jsx)("select", {
          value: currentMonth,
          onChange: e => {
            /* istanbul ignore next */
            cov_5wlifjyr9().f[5]++;
            cov_5wlifjyr9().s[45]++;
            setCurrentMonth(parseInt(e.target.value));
          },
          className: "bg-dark-200 text-black px-3 py-1 rounded-xl",
          "aria-label": "select-month",
          children: months.map((month, index) => {
            /* istanbul ignore next */
            cov_5wlifjyr9().f[6]++;
            cov_5wlifjyr9().s[46]++;
            return (0, jsx_runtime_1.jsx)("option", {
              value: index,
              className: "text-black",
              children: month
            }, month);
          })
        }), (0, jsx_runtime_1.jsx)("select", {
          value: currentYear,
          onChange: e => {
            /* istanbul ignore next */
            cov_5wlifjyr9().f[7]++;
            cov_5wlifjyr9().s[47]++;
            setCurrentYear(parseInt(e.target.value));
          },
          className: "bg-dark-200 text-black px-3 py-1 rounded-xl",
          "aria-label": "select-year",
          children: Array.from({
            length: 10
          }, (_, i) => {
            /* istanbul ignore next */
            cov_5wlifjyr9().f[8]++;
            cov_5wlifjyr9().s[48]++;
            return currentYear - 5 + i;
          }).map(year => {
            /* istanbul ignore next */
            cov_5wlifjyr9().f[9]++;
            cov_5wlifjyr9().s[49]++;
            return (0, jsx_runtime_1.jsx)("option", {
              value: year,
              className: "text-black",
              children: year
            }, year);
          })
        })]
      }), (0, jsx_runtime_1.jsx)("button", {
        onClick: handleNextMonth,
        className: "p-2 hover:bg-dark-200 rounded-xl text-white transition-colors",
        "aria-label": "next-month",
        children: (0, jsx_runtime_1.jsx)("svg", {
          className: "w-6 h-6",
          fill: "none",
          stroke: "currentColor",
          viewBox: "0 0 24 24",
          children: (0, jsx_runtime_1.jsx)("path", {
            strokeLinecap: "round",
            strokeLinejoin: "round",
            strokeWidth: 2,
            d: "M9 5l7 7-7 7"
          })
        })
      })]
    }), (0, jsx_runtime_1.jsx)("div", {
      className: "grid grid-cols-7 gap-1 mb-2",
      children: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => {
        /* istanbul ignore next */
        cov_5wlifjyr9().f[10]++;
        cov_5wlifjyr9().s[50]++;
        return (0, jsx_runtime_1.jsx)("div", {
          className: "text-center text-gray-400 text-sm py-2",
          children: day
        }, day);
      })
    }), (0, jsx_runtime_1.jsx)("div", {
      className: "grid grid-cols-7 gap-1",
      children: generateCalendarDays().map((day, index) => {
        /* istanbul ignore next */
        cov_5wlifjyr9().f[11]++;
        cov_5wlifjyr9().s[51]++;
        return (0, jsx_runtime_1.jsx)("button", {
          onClick: () => {
            /* istanbul ignore next */
            cov_5wlifjyr9().f[12]++;
            cov_5wlifjyr9().s[52]++;
            handleDateClick(day.day, day.isCurrentMonth);
          },
          disabled:
          /* istanbul ignore next */
          (cov_5wlifjyr9().b[11][0]++, day.isDisabled) ||
          /* istanbul ignore next */
          (cov_5wlifjyr9().b[11][1]++, !day.isCurrentMonth),
          className: `
              p-2 rounded-xl text-center transition-colors
              ${day.isCurrentMonth ?
          /* istanbul ignore next */
          (cov_5wlifjyr9().b[12][0]++, day.isToday ?
          /* istanbul ignore next */
          (cov_5wlifjyr9().b[13][0]++, 'bg-[#333e48] text-white') :
          /* istanbul ignore next */
          (cov_5wlifjyr9().b[13][1]++, day.isSelected ?
          /* istanbul ignore next */
          (cov_5wlifjyr9().b[14][0]++, 'bg-[#333e48] text-white') :
          /* istanbul ignore next */
          (cov_5wlifjyr9().b[14][1]++, 'text-white hover:bg-dark-200'))) :
          /* istanbul ignore next */
          (cov_5wlifjyr9().b[12][1]++, 'text-gray-600')}
              ${
          /* istanbul ignore next */
          (cov_5wlifjyr9().b[16][0]++, day.isDisabled) ||
          /* istanbul ignore next */
          (cov_5wlifjyr9().b[16][1]++, !day.isCurrentMonth) ?
          /* istanbul ignore next */
          (cov_5wlifjyr9().b[15][0]++, 'opacity-50 cursor-not-allowed') :
          /* istanbul ignore next */
          (cov_5wlifjyr9().b[15][1]++, 'cursor-pointer')}
            `,
          children: day.day
        }, index);
      })
    })]
  });
}
/* istanbul ignore next */
cov_5wlifjyr9().s[53]++;
exports.default = Calendar;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,