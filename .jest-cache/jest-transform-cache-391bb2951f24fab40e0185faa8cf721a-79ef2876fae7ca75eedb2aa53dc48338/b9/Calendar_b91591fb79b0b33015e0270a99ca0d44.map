{"file":"/Users/erichamilt0n/repos/lodge2a/l2a-mobile-app/src/components/Calendar.tsx","mappings":"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","names":[],"sources":["/Users/erichamilt0n/repos/lodge2a/l2a-mobile-app/src/components/Calendar.tsx"],"sourcesContent":["import { useState } from 'react'\n\ninterface CalendarProps {\n  onDateSelect?: (date: Date) => void\n  selectedDate?: Date\n  minDate?: Date\n  maxDate?: Date\n}\n\nexport default function Calendar({\n  onDateSelect,\n  selectedDate = new Date(),\n  minDate,\n  maxDate,\n}: CalendarProps) {\n  const [currentMonth, setCurrentMonth] = useState(selectedDate.getMonth())\n  const [currentYear, setCurrentYear] = useState(selectedDate.getFullYear())\n\n  const months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ]\n\n  const daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate()\n  const firstDayOfMonth = new Date(currentYear, currentMonth, 1).getDay()\n\n  const generateCalendarDays = () => {\n    const days = []\n    const previousMonthDays = new Date(currentYear, currentMonth, 0).getDate()\n\n    // Previous month days\n    for (let i = firstDayOfMonth - 1; i >= 0; i--) {\n      days.push({\n        day: previousMonthDays - i,\n        isCurrentMonth: false,\n        isPast: true,\n      })\n    }\n\n    // Current month days\n    const today = new Date()\n    for (let i = 1; i <= daysInMonth; i++) {\n      const date = new Date(currentYear, currentMonth, i)\n      const isDisabled = (minDate && date < minDate) || (maxDate && date > maxDate)\n\n      days.push({\n        day: i,\n        isCurrentMonth: true,\n        isToday:\n          i === today.getDate() &&\n          currentMonth === today.getMonth() &&\n          currentYear === today.getFullYear(),\n        isSelected:\n          i === selectedDate.getDate() &&\n          currentMonth === selectedDate.getMonth() &&\n          currentYear === selectedDate.getFullYear(),\n        isDisabled,\n      })\n    }\n\n    // Next month days\n    const remainingDays = 42 - days.length // 6 rows * 7 days = 42\n    for (let i = 1; i <= remainingDays; i++) {\n      days.push({\n        day: i,\n        isCurrentMonth: false,\n        isFuture: true,\n      })\n    }\n\n    return days\n  }\n\n  const handlePreviousMonth = () => {\n    if (currentMonth === 0) {\n      setCurrentMonth(11)\n      setCurrentYear(currentYear - 1)\n    } else {\n      setCurrentMonth(currentMonth - 1)\n    }\n  }\n\n  const handleNextMonth = () => {\n    if (currentMonth === 11) {\n      setCurrentMonth(0)\n      setCurrentYear(currentYear + 1)\n    } else {\n      setCurrentMonth(currentMonth + 1)\n    }\n  }\n\n  const handleDateClick = (day: number, isCurrentMonth: boolean) => {\n    if (!isCurrentMonth) return\n\n    const selectedDate = new Date(currentYear, currentMonth, day)\n    if (minDate && selectedDate < minDate) return\n    if (maxDate && selectedDate > maxDate) return\n\n    onDateSelect?.(selectedDate)\n  }\n\n  return (\n    <div className=\"bg-dark-100 rounded-2xl p-6\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <button\n          onClick={handlePreviousMonth}\n          className=\"p-2 hover:bg-dark-200 rounded-xl text-white transition-colors\"\n          aria-label=\"previous-month\"\n        >\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M15 19l-7-7 7-7\"\n            />\n          </svg>\n        </button>\n        <div className=\"flex items-center space-x-2\">\n          <select\n            value={currentMonth}\n            onChange={e => {\n              setCurrentMonth(parseInt(e.target.value))\n            }}\n            className=\"bg-dark-200 text-black px-3 py-1 rounded-xl\"\n            aria-label=\"select-month\"\n          >\n            {months.map((month, index) => (\n              <option key={month} value={index} className=\"text-black\">\n                {month}\n              </option>\n            ))}\n          </select>\n          <select\n            value={currentYear}\n            onChange={e => {\n              setCurrentYear(parseInt(e.target.value))\n            }}\n            className=\"bg-dark-200 text-black px-3 py-1 rounded-xl\"\n            aria-label=\"select-year\"\n          >\n            {Array.from({ length: 10 }, (_, i) => currentYear - 5 + i).map(year => (\n              <option key={year} value={year} className=\"text-black\">\n                {year}\n              </option>\n            ))}\n          </select>\n        </div>\n        <button\n          onClick={handleNextMonth}\n          className=\"p-2 hover:bg-dark-200 rounded-xl text-white transition-colors\"\n          aria-label=\"next-month\"\n        >\n          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </button>\n      </div>\n\n      <div className=\"grid grid-cols-7 gap-1 mb-2\">\n        {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => (\n          <div key={day} className=\"text-center text-gray-400 text-sm py-2\">\n            {day}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"grid grid-cols-7 gap-1\">\n        {generateCalendarDays().map((day, index) => (\n          <button\n            key={index}\n            onClick={() => {\n              handleDateClick(day.day, day.isCurrentMonth)\n            }}\n            disabled={day.isDisabled || !day.isCurrentMonth}\n            className={`\n              p-2 rounded-xl text-center transition-colors\n              ${\n                day.isCurrentMonth\n                  ? day.isToday\n                    ? 'bg-[#333e48] text-white'\n                    : day.isSelected\n                      ? 'bg-[#333e48] text-white'\n                      : 'text-white hover:bg-dark-200'\n                  : 'text-gray-600'\n              }\n              ${day.isDisabled || !day.isCurrentMonth ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}\n            `}\n          >\n            {day.day}\n          </button>\n        ))}\n      </div>\n    </div>\n  )\n}\n"],"version":3}