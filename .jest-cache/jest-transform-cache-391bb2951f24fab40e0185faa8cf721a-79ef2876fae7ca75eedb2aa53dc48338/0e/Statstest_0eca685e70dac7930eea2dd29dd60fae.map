{"file":"/Users/erichamilt0n/repos/lodge2a/l2a-mobile-app/src/pages/Stats.test.tsx","mappings":"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","names":[],"sources":["/Users/erichamilt0n/repos/lodge2a/l2a-mobile-app/src/pages/Stats.test.tsx"],"sourcesContent":["import { render, screen, fireEvent } from '@testing-library/react'\nimport Stats from './Stats'\n\ndescribe('Stats', () => {\n  const renderStats = () => {\n    return render(<Stats />)\n  }\n\n  it('renders the stats overview section', () => {\n    renderStats()\n    expect(screen.getByText('Your Stats')).toBeInTheDocument()\n    expect(screen.getByText('Track your performance and progress')).toBeInTheDocument()\n  })\n\n  it('displays all stat cards with correct values', () => {\n    renderStats()\n    expect(screen.getByText('Titles Played')).toBeInTheDocument()\n    expect(screen.getByText('24')).toBeInTheDocument()\n    expect(screen.getByText('Average Score')).toBeInTheDocument()\n    expect(screen.getByText('714')).toBeInTheDocument()\n    expect(screen.getByText('Best Score')).toBeInTheDocument()\n    expect(screen.getByText('1,075')).toBeInTheDocument()\n    expect(screen.getByText('Hours Played')).toBeInTheDocument()\n    expect(screen.getByText('7')).toBeInTheDocument()\n  })\n\n  it('displays recent scores section', () => {\n    renderStats()\n    expect(screen.getByText('Recent Scores')).toBeInTheDocument()\n    expect(screen.getByText('Lodge2A Main Course')).toBeInTheDocument()\n    expect(screen.getByText('Dec 15, 2024')).toBeInTheDocument()\n    expect(screen.getByText('82')).toBeInTheDocument()\n  })\n\n  it('displays score distribution chart', () => {\n    renderStats()\n    expect(screen.getByText('Score Distribution')).toBeInTheDocument()\n    const chartElement = screen.getByTestId('score-distribution-chart')\n    expect(chartElement).toBeInTheDocument()\n  })\n\n  it('displays achievements section', () => {\n    renderStats()\n    expect(screen.getByText('Achievements')).toBeInTheDocument()\n    const viewAllButton = screen.getAllByText('View All').find(el => \n      el.closest('button')?.className.includes('text-blue-500')\n    )\n    expect(viewAllButton).toBeInTheDocument()\n  })\n\n  it('handles time period filter changes', () => {\n    renderStats()\n    const filterButton = screen.getByRole('button', { name: /Last 30 Days/i })\n    expect(filterButton).toBeInTheDocument()\n    fireEvent.click(filterButton)\n    // Check if dropdown opens\n    expect(screen.getByText('Last 7 Days')).toBeInTheDocument()\n    expect(screen.getByText('Last 90 Days')).toBeInTheDocument()\n    expect(screen.getByText('All Time')).toBeInTheDocument()\n  })\n\n  it('displays correct chart data based on selected time period', () => {\n    renderStats()\n    const filterButton = screen.getByRole('button', { name: /Last 30 Days/i })\n    fireEvent.click(filterButton)\n    const sevenDaysOption = screen.getByText('Last 7 Days')\n    fireEvent.click(sevenDaysOption)\n    // Verify chart updates\n    const chartElement = screen.getByTestId('score-distribution-chart')\n    expect(chartElement).toHaveAttribute('data-period', '7')\n  })\n\n  it('handles achievement card interactions', () => {\n    renderStats()\n    const achievementCards = screen.getAllByTestId('achievement-card')\n    expect(achievementCards.length).toBeGreaterThan(0)\n    fireEvent.click(achievementCards[0])\n    // Verify achievement details modal/popup\n    expect(screen.getByTestId('achievement-details')).toBeInTheDocument()\n  })\n})\n"],"version":3}